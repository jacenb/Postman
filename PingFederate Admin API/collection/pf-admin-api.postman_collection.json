{
	"info": {
		"_postman_id": "d40d6728-ef4a-304a-2007-5eb54a9fc461",
		"name": "PF Admin API",
		"description": "The PingFederate Administrative API is a REST-based interface that provides a way to make configuraiton changes to PingFederate as an alternative to using the administrative console.\n\nPingFederate v8.4.3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/administrativeAccounts",
			"item": [
				{
					"name": "/administrativeAccounts",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts"
							]
						},
						"description": "Get all the PingFederate native Administrative Accounts"
					},
					"response": []
				},
				{
					"name": "/administrativeAccounts",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"encryptedPassword\": \"string\",\n  \"active\": \"boolean\",\n  \"description\": \"string\",\n  \"auditor\": \"boolean\",\n  \"phoneNumber\": \"string\",\n  \"emailAddress\": \"string\",\n  \"department\": \"string\",\n  \"roles\": [\n    \"AdministrativeRoleType\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts"
							]
						},
						"description": "Add a new PingFederate native Administrative Account"
					},
					"response": []
				},
				{
					"name": "/administrativeAccounts/{username}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts/{username}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts",
								"{username}"
							]
						},
						"description": "Get a PingFederate native Administrative Account"
					},
					"response": []
				},
				{
					"name": "/administrativeAccounts/{username}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"encryptedPassword\": \"string\",\n  \"active\": \"boolean\",\n  \"description\": \"string\",\n  \"auditor\": \"boolean\",\n  \"phoneNumber\": \"string\",\n  \"emailAddress\": \"string\",\n  \"department\": \"string\",\n  \"roles\": [\n    \"AdministrativeRoleType\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts/{username}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts",
								"{username}"
							]
						},
						"description": "Update the information for a native Administrative Account"
					},
					"response": []
				},
				{
					"name": "/administrativeAccounts/{username}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts/{username}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts",
								"{username}"
							]
						},
						"description": "Delete a PingFederate native Administrtive Account"
					},
					"response": []
				},
				{
					"name": "/administrativeAccounts/{username}/resetPassword",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"string\",\n  \"newPassword\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts/{username}/resetPassword",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts",
								"{username}",
								"resetPassword"
							]
						},
						"description": "Reset the Password of an existing PingFederate native Administrative Account"
					},
					"response": []
				},
				{
					"name": "/administrativeAccounts/changePassword",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"string\",\n  \"newPassword\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/administrativeAccounts/changePassword",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"administrativeAccounts",
								"changePassword"
							]
						},
						"description": "Change the Password of current PingFederate native Account."
					},
					"response": []
				}
			]
		},
		{
			"name": "/authenticationApi",
			"item": [
				{
					"name": "/authenticationApi/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"settings"
							]
						},
						"description": "Get the Authentication API settings"
					},
					"response": []
				},
				{
					"name": "/authenticationApi/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiEnabled\": \"boolean\",\n  \"defaultApplicationRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"enableApiDescriptions\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"settings"
							]
						},
						"description": "Set the Authentication API settings"
					},
					"response": []
				},
				{
					"name": "/authenticationApi/applications",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/applications",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"applications"
							]
						},
						"description": "Get the collection of Authentication API Applications"
					},
					"response": []
				},
				{
					"name": "/authenticationApi/applications",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"url\": \"string\",\n  \"description\": \"string\",\n  \"additionalAllowedOrigins\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/applications",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"applications"
							]
						},
						"description": "Create a new Authentication API Application"
					},
					"response": []
				},
				{
					"name": "/authenticationApi/applications/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/applications/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"applications",
								"{id}"
							]
						},
						"description": "Get an Authentication API Applicaiton by ID"
					},
					"response": []
				},
				{
					"name": "/authenticationApi/applications/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"url\": \"string\",\n  \"description\": \"string\",\n  \"additionalAllowedOrigins\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/applications/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"applications",
								"{id}"
							]
						},
						"description": "Update an Authentication API Application.  If the application is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.  Note: A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/authenticationApi/applications/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationApi/applications/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationApi",
								"applications",
								"{id}"
							]
						},
						"description": "Delete an Authentication API Application.  A 404 status code is returned for nonexistent IDs.  Note: if the request succeeds, the response body is empty.  If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/authenticationPolicies",
			"item": [
				{
					"name": "/authenticationPolicies/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicies/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicies",
								"settings"
							]
						},
						"description": "Get the authentication policies settings."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicies/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enableIdpAuthnSelection\": \"boolean\",\n  \"enableSpAuthnSelection\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicies/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicies",
								"settings"
							]
						},
						"description": "Set the authentication policies settings."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicies/default",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicies/default",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicies",
								"default"
							]
						},
						"description": "Get the default configured authentication policy."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicies/default",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"failIfNoSelection\": \"boolean\",\n  \"authnSelectionTrees\": [\n    {\n      \"rootNode\": {\n        \"action\": {\n          \"type\": \"AuthenticationPolicySelectionActionType\",\n          \"context\": \"string\"\n        },\n        \"children\": [\n          \"AuthenticationPolicyTreeNode\"\n        ]\n      }\n    }\n  ],\n  \"defaultAuthenticationSources\": [\n    {\n      \"type\": \"AuthenticationSourceType\",\n      \"sourceRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicies/default",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicies",
								"default"
							]
						},
						"description": "Set the default authentication policy."
					},
					"response": []
				}
			]
		},
		{
			"name": "/authenticationPolicyContracts",
			"item": [
				{
					"name": "/authenticationPolicyContracts",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicyContracts?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicyContracts"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": null,
									"description": "Number of contracts per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filter criteria limits the authentication policy contracts that are returned to only those that match it. The filter criteria is compared to the authentication policy contract name and ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Gets the Authentication Policy Contracts."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicyContracts",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"coreAttributes\": [\n    {\n      \"name\": \"string\"\n    }\n  ],\n  \"extendedAttributes\": [\n    {\n      \"name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicyContracts",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicyContracts"
							]
						},
						"description": "Create a new Authentication Policy Contract.  If the Authentication Policy Contract is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicyContracts/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicyContracts/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicyContracts",
								"{id}"
							]
						},
						"description": "Gets the Authentication Policy Contract by ID."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicyContracts/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"coreAttributes\": [\n    {\n      \"name\": \"string\"\n    }\n  ],\n  \"extendedAttributes\": [\n    {\n      \"name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicyContracts/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicyContracts",
								"{id}"
							]
						},
						"description": "Update an Authentication Policy Contract by ID."
					},
					"response": []
				},
				{
					"name": "/authenticationPolicyContracts/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationPolicyContracts/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationPolicyContracts",
								"{id}"
							]
						},
						"description": "Delete an Authentication Policy Contract with the specified ID.  A 404 status code is returned for nonexistent IDs.  Note: if the request succeeds, the response body is empty.  If the request fails, an API result is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/authenticationSelectors",
			"item": [
				{
					"name": "/authenticationSelectors/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors",
								"descriptors"
							]
						},
						"description": "Get the list of available Authentication Selector descriptors."
					},
					"response": []
				},
				{
					"name": "/authenticationSelectors/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of an Authentication Selector plugin by ID."
					},
					"response": []
				},
				{
					"name": "/authenticationSelectors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": null,
									"description": "Number of selectors per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filter criteria limits the authentication selector instances that are returned to only those that match it. The filter criteria is compared to the authentication selector instance name and ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get the list of configured Authentication Selector instances."
					},
					"response": []
				},
				{
					"name": "/authenticationSelectors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors"
							]
						},
						"description": "Create a new authentication selector instance.  If the authentication selector is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/authenticationSelectors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors",
								"{id}"
							]
						},
						"description": "Get the configured Authentication Selector instance with the specified ID.  A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/authenticationSelectors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors",
								"{id}"
							]
						},
						"description": "Update an authentication selector instance.  If the authentication selector is not properly configured, a  422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/authenticationSelectors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/authenticationSelectors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"authenticationSelectors",
								"{id}"
							]
						},
						"description": "Delete an Authentication Selector instance with the specified ID.  A 404 status code is returned for nonexistent IDs.  Note: Only selectors not in use can be deleted.  If the request succeeds, the response body is empty.  If the request fails, an API result is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/certificates/ca",
			"item": [
				{
					"name": "/certificates/ca",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/ca",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"ca"
							]
						},
						"description": "Get list of trusted certificate authorities."
					},
					"response": []
				},
				{
					"name": "/certificates/ca/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/ca/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"ca",
								"{id}"
							]
						},
						"description": "Get list of trusted certificate authorities."
					},
					"response": []
				},
				{
					"name": "/certificates/ca/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/ca/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"ca",
								"{id}"
							]
						},
						"description": "If the request is successful, the response body is empty.  If the request fails, an API result is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/certificates/ca/import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/ca/import",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"ca",
								"import"
							]
						},
						"description": "Import a new trusted certificate authority."
					},
					"response": []
				},
				{
					"name": "/certificates/ca/{id}/file",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/ca/{id}/file",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"ca",
								"{id}",
								"file"
							]
						},
						"description": "For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json."
					},
					"response": []
				}
			]
		},
		{
			"name": "/certificate/revocation",
			"item": [
				{
					"name": "/certificate/revocation/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/revocation/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"revocation",
								"settings"
							]
						},
						"description": "Get certificate revocation settings"
					},
					"response": []
				},
				{
					"name": "/certificate/revocation/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ocspSettings\": {\n    \"requesterAddNonce\": \"boolean\",\n    \"responderUrl\": \"string\",\n    \"responderCertReference\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"currentUpdateGracePeriod\": \"integer\",\n    \"nextUpdateGracePeriod\": \"integer\",\n    \"responseCachePeriod\": \"integer\",\n    \"responderTimeout\": \"integer\",\n    \"actionOnResponderUnavailable\": \"string\",\n    \"actionOnStatusUnknown\": \"string\",\n    \"actionOnUnsuccessfulResponse\": \"string\"\n  },\n  \"crlSettings\": {\n    \"treatNonRetrievableCrlAsRevoked\": \"boolean\",\n    \"verifyCrlSignature\": \"boolean\",\n    \"nextRetryMinsWhenResolveFailed\": \"integer\",\n    \"nextRetryMinsWhenNextUpdateInPast\": \"integer\"\n  },\n  \"proxySettings\": {\n    \"host\": \"string\",\n    \"port\": \"integer\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/revocation/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"revocation",
								"settings"
							]
						},
						"description": "Update certificate revocation settings"
					},
					"response": []
				},
				{
					"name": "/certificate/revocation/ocspCertificates",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/revocation/ocspCertificates",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"revocation",
								"ocspCertificates"
							]
						},
						"description": "Get all OCSP responder signature verification certificates"
					},
					"response": []
				},
				{
					"name": "/certificate/revocation/ocspCertificates",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"fileData\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/revocation/ocspCertificates",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"revocation",
								"ocspCertificates"
							]
						},
						"description": "Create an OCSP responder signature verification certificate"
					},
					"response": []
				},
				{
					"name": "/certificate/revocation/ocspCertificates/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/revocation/ocspCertificates/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"revocation",
								"ocspCertificates",
								"{id}"
							]
						},
						"description": "Get an OCSP responder signature verification certificate"
					},
					"response": []
				},
				{
					"name": "/certificate/revocation/ocspCertificates/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/certificates/revocation/ocspCertificates/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"certificates",
								"revocation",
								"ocspCertificates",
								"{id}"
							]
						},
						"description": "Delete an OCSP responder signature verification certificate"
					},
					"response": []
				}
			]
		},
		{
			"name": "/cluster",
			"item": [
				{
					"name": "/cluster/status",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/cluster/status",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"cluster",
								"status"
							]
						},
						"description": "Get information on the current status of the cluster."
					},
					"response": []
				},
				{
					"name": "/cluster/replicate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/cluster/replicate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"cluster",
								"replicate"
							]
						},
						"description": "Replicate configuration updates to all nodes in the cluster."
					},
					"response": []
				}
			]
		},
		{
			"name": "/configArchive",
			"item": [
				{
					"name": "/configArchive/import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/configArchive/import?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"configArchive",
								"import"
							],
							"query": [
								{
									"key": "forceImport",
									"value": "{true or false}",
									"disabled": true
								}
							]
						},
						"description": "If there are missing components or license inconsistencies, the import is halted by default to allow you to install the necessary components or license. However, you can choose to force the deployment by setting 'forceImport' to true and then install the necessary files later."
					},
					"response": []
				},
				{
					"name": "/configArchive/export",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/configArchive/export",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"configArchive",
								"export"
							]
						},
						"description": "Export a configuration archive."
					},
					"response": []
				}
			]
		},
		{
			"name": "/connectionMetadata",
			"item": [
				{
					"name": "/connectionMetadata/export",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"connectionType\": \"ConnectionType\",\n  \"connectionId\": \"string\",\n  \"virtualServerId\": \"string\",\n  \"signingSettings\": {\n    \"signingKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"algorithm\": \"string\",\n    \"includeRawKeyInSignature\": \"boolean\",\n    \"includeCertInSignature\": \"boolean\"\n  },\n  \"useSecondaryPortForSoap\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/connectionMetadata/export",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"connectionMetadata",
								"export"
							]
						},
						"description": "Export a connection's SAML metadata that can be given to a partner."
					},
					"response": []
				},
				{
					"name": "/connectionMetadata/convert",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"connectionType\": \"ConnectionType\",\n  \"expectedProtocol\": \"MetadataProtocol\",\n  \"expectedEntityId\": \"string\",\n  \"samlMetadata\": \"string\",\n  \"verificationCertificate\": \"string\",\n  \"templateConnection\": {\n    \"type\": \"ConnectionType\",\n    \"id\": \"string\",\n    \"entityId\": \"string\",\n    \"name\": \"string\",\n    \"active\": \"boolean\",\n    \"baseUrl\": \"string\",\n    \"defaultVirtualEntityId\": \"string\",\n    \"virtualEntityIds\": [\n      \"string\"\n    ],\n    \"metadataReloadSettings\": {\n      \"metadataUrlRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"enableAutoMetadataUpdate\": \"boolean\"\n    },\n    \"credentials\": {\n      \"verificationSubjectDN\": \"string\",\n      \"verificationIssuerDN\": \"string\",\n      \"certs\": [\n        {\n          \"certView\": {\n            \"id\": \"string\",\n            \"serialNumber\": \"string\",\n            \"subjectDN\": \"string\",\n            \"issuerDN\": \"string\",\n            \"validFrom\": \"string\",\n            \"expires\": \"string\",\n            \"keyAlgorithm\": \"string\",\n            \"keySize\": \"integer\",\n            \"signatureAlgorithm\": \"string\",\n            \"version\": \"integer\",\n            \"md5Fingerprint\": \"string\",\n            \"sha1Fingerprint\": \"string\",\n            \"sha256Fingerprint\": \"string\",\n            \"status\": \"CertificateValidity\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"x509File\": {\n            \"fileData\": \"string\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"primaryVerificationCert\": \"boolean\",\n          \"secondaryVerificationCert\": \"boolean\",\n          \"encryptionCert\": \"boolean\"\n        }\n      ],\n      \"blockEncryptionAlgorithm\": \"string\",\n      \"keyTransportAlgorithm\": \"string\",\n      \"signingSettings\": {\n        \"signingKeyPairRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"algorithm\": \"string\",\n        \"includeRawKeyInSignature\": \"boolean\",\n        \"includeCertInSignature\": \"boolean\"\n      },\n      \"decryptionKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"secondaryDecryptionKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"outboundBackChannelAuth\": {\n        \"type\": \"BackChannelAuthType\",\n        \"httpBasicCredentials\": {\n          \"username\": \"string\",\n          \"password\": \"string\",\n          \"encryptedPassword\": \"string\"\n        },\n        \"digitalSignature\": \"boolean\",\n        \"sslAuthKeyPairRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"validatePartnerCert\": \"boolean\"\n      },\n      \"inboundBackChannelAuth\": {\n        \"type\": \"BackChannelAuthType\",\n        \"httpBasicCredentials\": {\n          \"username\": \"string\",\n          \"password\": \"string\",\n          \"encryptedPassword\": \"string\"\n        },\n        \"digitalSignature\": \"boolean\",\n        \"verificationSubjectDN\": \"string\",\n        \"verificationIssuerDN\": \"string\",\n        \"certs\": [\n          {\n            \"certView\": {\n              \"id\": \"string\",\n              \"serialNumber\": \"string\",\n              \"subjectDN\": \"string\",\n              \"issuerDN\": \"string\",\n              \"validFrom\": \"string\",\n              \"expires\": \"string\",\n              \"keyAlgorithm\": \"string\",\n              \"keySize\": \"integer\",\n              \"signatureAlgorithm\": \"string\",\n              \"version\": \"integer\",\n              \"md5Fingerprint\": \"string\",\n              \"sha1Fingerprint\": \"string\",\n              \"sha256Fingerprint\": \"string\",\n              \"status\": \"CertificateValidity\",\n              \"cryptoProvider\": \"CryptoProvider\"\n            },\n            \"x509File\": {\n              \"fileData\": \"string\",\n              \"cryptoProvider\": \"CryptoProvider\"\n            },\n            \"primaryVerificationCert\": \"boolean\",\n            \"secondaryVerificationCert\": \"boolean\",\n            \"encryptionCert\": \"boolean\"\n          }\n        ],\n        \"requireSsl\": \"boolean\"\n      }\n    },\n    \"contactInfo\": {\n      \"company\": \"string\",\n      \"email\": \"string\",\n      \"firstName\": \"string\",\n      \"lastName\": \"string\",\n      \"phone\": \"string\"\n    },\n    \"licenseConnectionGroup\": \"string\",\n    \"loggingMode\": \"LoggingMode\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/connectionMetadata/convert",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"connectionMetadata",
								"convert"
							]
						},
						"description": "Convert a partner's SAML metadata into an API JSON representation that can be later saved using one of the connection creation endpoints. The metadata can also be overlayed on top of a specified templateconnection. The convert operation also returns the authenticity of the metadata based on its certificate. If a certificate isn't embedded in the metadata, one can be provided."
					},
					"response": []
				}
			]
		},
		{
			"name": "/dataStores",
			"item": [
				{
					"name": "/dataStores/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"descriptors"
							]
						},
						"description": "Get the list of available custom data store descriptors."
					},
					"response": []
				},
				{
					"name": "/dataStores/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of a custom data store plugin by ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/dataStores",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores"
							]
						},
						"description": "Get a list of all the data stores."
					},
					"response": []
				},
				{
					"name": "/dataStores",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"DataStoreType\",\n  \"id\": \"string\",\n  \"maskAttributeValues\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores"
							]
						},
						"description": "Create a new data store. If the data store is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/dataStores/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"{id}"
							]
						},
						"description": "Get a data store with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/dataStores/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"DataStoreType\",\n  \"id\": \"string\",\n  \"maskAttributeValues\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"{id}"
							]
						},
						"description": "Update a data store with the matching ID. If the data store is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected. Note: A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/dataStores/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"{id}"
							]
						},
						"description": "Delete a data store with the specified ID. A 404 status code is returned for nonexistent IDs. Note: Only unused data stores can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/dataStores/{id}/actions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/{id}/actions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"{id}",
								"actions"
							]
						},
						"description": "Get all actions for a data store"
					},
					"response": []
				},
				{
					"name": "/dataStores/{id}/actions/{actionId}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/{id}/actions/{actionId}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"{id}",
								"actions",
								"{actionId}"
							]
						},
						"description": "Get an action for a data store"
					},
					"response": []
				},
				{
					"name": "/dataStores/{id}/actions/{actionId}/invokeAction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/dataStores/{id}/actions/{actionId}/invokeAction",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"dataStores",
								"{id}",
								"actions",
								"{actionId}",
								"invokeAction"
							]
						},
						"description": "Invokes an action for a data store.  A 404 status code is returned for nonexistent action IDs. If the action produces a download file, the file will be returned directly in the response. Otherwise an ActionResult will be returned."
					},
					"response": []
				}
			]
		},
		{
			"name": "/extendedProperties",
			"item": [
				{
					"name": "/extendedProperties",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/extendedProperties",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"extendedProperties"
							]
						},
						"description": "Get the defined Extended Properties"
					},
					"response": []
				},
				{
					"name": "/extendedProperties",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"multiValued\": \"boolean\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/extendedProperties",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"extendedProperties"
							]
						},
						"description": "Update the Extended Properties"
					},
					"response": []
				}
			]
		},
		{
			"name": "/idp/adapters",
			"item": [
				{
					"name": "/idp/adapters/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"descriptors"
							]
						},
						"description": "Get a list of available IdP adapter descriptors."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of an IdP adapter plugin by ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/adapters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": null,
									"description": "Number of adapters per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filter criteria limits the IdP adapters that are returned to only those that match it. The filter criteria is compared to the IdP adapter instance name and ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get the list of configured IdP adapter instances."
					},
					"response": []
				},
				{
					"name": "/idp/adapters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"authnCtxClassRef\": \"string\",\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    },\n    \"inherited\": \"boolean\"\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\",\n        \"pseudonym\": \"boolean\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\",\n        \"pseudonym\": \"boolean\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"maskOgnlValues\": \"boolean\",\n    \"inherited\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters"
							]
						},
						"description": "Create a new IdP adapter instance. If the IdP adapter is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"{id}"
							]
						},
						"description": "Get the configured IdP adapter instance with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"authnCtxClassRef\": \"string\",\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    },\n    \"inherited\": \"boolean\"\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\",\n        \"pseudonym\": \"boolean\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\",\n        \"pseudonym\": \"boolean\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"maskOgnlValues\": \"boolean\",\n    \"inherited\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"{id}"
							]
						},
						"description": "Update an IdP adapter instance. If the IdP adapter is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"{id}"
							]
						},
						"description": "Delete an IdP adapter instance with the specified ID. A 404 status code is returned for nonexistent IDs. Note: Only adapters not in use can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/{id}/actions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/{id}/actions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"{id}",
								"actions"
							]
						},
						"description": "List the actions for an IdP adapter instance. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/{id}/actions/{actionId}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/{id}/actions/{actionId}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"{id}",
								"actions",
								"{actionId}"
							]
						},
						"description": "Find an IdP adapter instance's action by ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/adapters/{id}/actions/{actionId}/invokeAction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/adapters/{id}/actions/{actionId}/invokeAction",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"adapters",
								"{id}",
								"actions",
								"{actionId}",
								"invokeAction"
							]
						},
						"description": "Invokes an action for an IdP adapter instance. A 404 status code is returned for nonexistent IDs. If the action produces a download file, the file will be returned directly in the response. Otherwise an ActionResult will be returned."
					},
					"response": []
				}
			]
		},
		{
			"name": "/idp/connectors",
			"item": [
				{
					"name": "/idp/connectors/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/connectors/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"connectors",
								"descriptors"
							]
						},
						"description": "Get all IdP connector descriptors"
					},
					"response": []
				},
				{
					"name": "/idp/connectors/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/connectors/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"connectors",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get an IdP connector descriptor"
					},
					"response": []
				}
			]
		},
		{
			"name": "/idp/defaultUrls",
			"item": [
				{
					"name": "/idp/defaultUrls",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/defaultUrls",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"defaultUrls"
							]
						},
						"description": "Gets the IDP Default URL settings."
					},
					"response": []
				},
				{
					"name": "/idp/defaultUrls",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"confirmIdpSlo\": \"boolean\",\n  \"idpSloSuccessUrl\": \"string\",\n  \"idpErrorMsg\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/defaultUrls",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"defaultUrls"
							]
						},
						"description": "Update the IDP Default URL settings."
					},
					"response": []
				}
			]
		},
		{
			"name": "/idp/spConnections",
			"item": [
				{
					"name": "/idp/spConnections",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections"
							],
							"query": [
								{
									"key": "entityId",
									"value": null,
									"description": "Entity ID of the connection to fetch (case-sensitive)",
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": null,
									"description": "Number of connections per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filter criteria limits the SP connections that are returned to only those that match it. The filter criteria is compared to the SP connection name and partner entity ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all the WS-Fed, SAML1.0, SAML1.1 and SAML 2.0 SP connections."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"ConnectionType\",\n  \"id\": \"string\",\n  \"entityId\": \"string\",\n  \"name\": \"string\",\n  \"active\": \"boolean\",\n  \"baseUrl\": \"string\",\n  \"defaultVirtualEntityId\": \"string\",\n  \"spBrowserSso\": {\n    \"protocol\": \"Protocol\",\n    \"wsFedTokenType\": \"WsFedTokenType\",\n    \"enabledProfiles\": [\n      \"Profile\"\n    ],\n    \"incomingBindings\": [\n      \"Binding\"\n    ],\n    \"artifact\": {\n      \"lifetime\": \"integer\",\n      \"resolverLocations\": [\n        {\n          \"index\": \"integer\",\n          \"url\": \"string\"\n        }\n      ],\n      \"sourceId\": \"string\"\n    },\n    \"urlWhitelistEntries\": [\n      {\n        \"validDomain\": \"string\",\n        \"validPath\": \"string\",\n        \"allowQueryAndFragment\": \"boolean\",\n        \"requireHttps\": \"boolean\"\n      }\n    ],\n    \"sloServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\",\n        \"responseUrl\": \"string\"\n      }\n    ],\n    \"defaultTargetUrl\": \"string\",\n    \"ssoServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\",\n        \"isDefault\": \"boolean\",\n        \"index\": \"integer\"\n      }\n    ],\n    \"spSamlIdentityMapping\": \"SpSamlIdentityMapping\",\n    \"spWsFedIdentityMapping\": \"SpWsFedIdentityMapping\",\n    \"signAssertions\": \"boolean\",\n    \"requireSignedAuthnRequests\": \"boolean\",\n    \"encryptionPolicy\": {\n      \"encryptAssertion\": \"boolean\",\n      \"encryptedAttributes\": [\n        \"string\"\n      ],\n      \"encryptSloSubjectNameId\": \"boolean\",\n      \"sloSubjectNameIDEncrypted\": \"boolean\"\n    },\n    \"attributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"nameFormat\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"nameFormat\": \"string\",\n          \"name\": \"string\"\n        }\n      ]\n    },\n    \"adapterMappings\": [\n      {\n        \"idpAdapterRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualEntityIds\": \"boolean\",\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"authenticationPolicyContractAssertionMappings\": [\n      {\n        \"authenticationPolicyContractRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualEntityIds\": \"boolean\",\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"messageCustomizations\": [\n      {\n        \"contextName\": \"string\",\n        \"messageExpression\": \"string\"\n      }\n    ],\n    \"assertionLifetime\": {\n      \"minutesBefore\": \"integer\",\n      \"minutesAfter\": \"integer\"\n    }\n  },\n  \"attributeQuery\": {\n    \"attributes\": [\n      \"string\"\n    ],\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    },\n    \"policy\": {\n      \"signResponse\": \"boolean\",\n      \"signAssertion\": \"boolean\",\n      \"encryptAssertion\": \"boolean\",\n      \"requireSignedAttributeQuery\": \"boolean\",\n      \"requireEncryptedNameId\": \"boolean\"\n    }\n  },\n  \"virtualEntityIds\": [\n    \"string\"\n  ],\n  \"metadataReloadSettings\": {\n    \"metadataUrlRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"enableAutoMetadataUpdate\": \"boolean\"\n  },\n  \"credentials\": {\n    \"verificationSubjectDN\": \"string\",\n    \"verificationIssuerDN\": \"string\",\n    \"certs\": [\n      {\n        \"certView\": {\n          \"id\": \"string\",\n          \"serialNumber\": \"string\",\n          \"subjectDN\": \"string\",\n          \"issuerDN\": \"string\",\n          \"validFrom\": \"string\",\n          \"expires\": \"string\",\n          \"keyAlgorithm\": \"string\",\n          \"keySize\": \"integer\",\n          \"signatureAlgorithm\": \"string\",\n          \"version\": \"integer\",\n          \"md5Fingerprint\": \"string\",\n          \"sha1Fingerprint\": \"string\",\n          \"sha256Fingerprint\": \"string\",\n          \"status\": \"CertificateValidity\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"x509File\": {\n          \"fileData\": \"string\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"primaryVerificationCert\": \"boolean\",\n        \"secondaryVerificationCert\": \"boolean\",\n        \"encryptionCert\": \"boolean\"\n      }\n    ],\n    \"blockEncryptionAlgorithm\": \"string\",\n    \"keyTransportAlgorithm\": \"string\",\n    \"signingSettings\": {\n      \"signingKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"algorithm\": \"string\",\n      \"includeRawKeyInSignature\": \"boolean\",\n      \"includeCertInSignature\": \"boolean\"\n    },\n    \"decryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"secondaryDecryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"outboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"sslAuthKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"validatePartnerCert\": \"boolean\"\n    },\n    \"inboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"verificationSubjectDN\": \"string\",\n      \"verificationIssuerDN\": \"string\",\n      \"certs\": [\n        {\n          \"certView\": {\n            \"id\": \"string\",\n            \"serialNumber\": \"string\",\n            \"subjectDN\": \"string\",\n            \"issuerDN\": \"string\",\n            \"validFrom\": \"string\",\n            \"expires\": \"string\",\n            \"keyAlgorithm\": \"string\",\n            \"keySize\": \"integer\",\n            \"signatureAlgorithm\": \"string\",\n            \"version\": \"integer\",\n            \"md5Fingerprint\": \"string\",\n            \"sha1Fingerprint\": \"string\",\n            \"sha256Fingerprint\": \"string\",\n            \"status\": \"CertificateValidity\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"x509File\": {\n            \"fileData\": \"string\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"primaryVerificationCert\": \"boolean\",\n          \"secondaryVerificationCert\": \"boolean\",\n          \"encryptionCert\": \"boolean\"\n        }\n      ],\n      \"requireSsl\": \"boolean\"\n    }\n  },\n  \"contactInfo\": {\n    \"company\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"phone\": \"string\"\n  },\n  \"licenseConnectionGroup\": \"string\",\n  \"applicationName\": \"string\",\n  \"applicationIconUrl\": \"string\",\n  \"loggingMode\": \"LoggingMode\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections"
							]
						},
						"description": "Create a new SP connection. If the SP connection is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}"
							]
						},
						"description": "Get a SAML 2.0 SP connection with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"ConnectionType\",\n  \"id\": \"string\",\n  \"entityId\": \"string\",\n  \"name\": \"string\",\n  \"active\": \"boolean\",\n  \"baseUrl\": \"string\",\n  \"defaultVirtualEntityId\": \"string\",\n  \"spBrowserSso\": {\n    \"protocol\": \"Protocol\",\n    \"wsFedTokenType\": \"WsFedTokenType\",\n    \"enabledProfiles\": [\n      \"Profile\"\n    ],\n    \"incomingBindings\": [\n      \"Binding\"\n    ],\n    \"artifact\": {\n      \"lifetime\": \"integer\",\n      \"resolverLocations\": [\n        {\n          \"index\": \"integer\",\n          \"url\": \"string\"\n        }\n      ],\n      \"sourceId\": \"string\"\n    },\n    \"urlWhitelistEntries\": [\n      {\n        \"validDomain\": \"string\",\n        \"validPath\": \"string\",\n        \"allowQueryAndFragment\": \"boolean\",\n        \"requireHttps\": \"boolean\"\n      }\n    ],\n    \"sloServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\",\n        \"responseUrl\": \"string\"\n      }\n    ],\n    \"defaultTargetUrl\": \"string\",\n    \"ssoServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\",\n        \"isDefault\": \"boolean\",\n        \"index\": \"integer\"\n      }\n    ],\n    \"spSamlIdentityMapping\": \"SpSamlIdentityMapping\",\n    \"spWsFedIdentityMapping\": \"SpWsFedIdentityMapping\",\n    \"signAssertions\": \"boolean\",\n    \"requireSignedAuthnRequests\": \"boolean\",\n    \"encryptionPolicy\": {\n      \"encryptAssertion\": \"boolean\",\n      \"encryptedAttributes\": [\n        \"string\"\n      ],\n      \"encryptSloSubjectNameId\": \"boolean\",\n      \"sloSubjectNameIDEncrypted\": \"boolean\"\n    },\n    \"attributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"nameFormat\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"nameFormat\": \"string\",\n          \"name\": \"string\"\n        }\n      ]\n    },\n    \"adapterMappings\": [\n      {\n        \"idpAdapterRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualEntityIds\": \"boolean\",\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"authenticationPolicyContractAssertionMappings\": [\n      {\n        \"authenticationPolicyContractRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualEntityIds\": \"boolean\",\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"messageCustomizations\": [\n      {\n        \"contextName\": \"string\",\n        \"messageExpression\": \"string\"\n      }\n    ],\n    \"assertionLifetime\": {\n      \"minutesBefore\": \"integer\",\n      \"minutesAfter\": \"integer\"\n    }\n  },\n  \"attributeQuery\": {\n    \"attributes\": [\n      \"string\"\n    ],\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    },\n    \"policy\": {\n      \"signResponse\": \"boolean\",\n      \"signAssertion\": \"boolean\",\n      \"encryptAssertion\": \"boolean\",\n      \"requireSignedAttributeQuery\": \"boolean\",\n      \"requireEncryptedNameId\": \"boolean\"\n    }\n  },\n  \"virtualEntityIds\": [\n    \"string\"\n  ],\n  \"metadataReloadSettings\": {\n    \"metadataUrlRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"enableAutoMetadataUpdate\": \"boolean\"\n  },\n  \"credentials\": {\n    \"verificationSubjectDN\": \"string\",\n    \"verificationIssuerDN\": \"string\",\n    \"certs\": [\n      {\n        \"certView\": {\n          \"id\": \"string\",\n          \"serialNumber\": \"string\",\n          \"subjectDN\": \"string\",\n          \"issuerDN\": \"string\",\n          \"validFrom\": \"string\",\n          \"expires\": \"string\",\n          \"keyAlgorithm\": \"string\",\n          \"keySize\": \"integer\",\n          \"signatureAlgorithm\": \"string\",\n          \"version\": \"integer\",\n          \"md5Fingerprint\": \"string\",\n          \"sha1Fingerprint\": \"string\",\n          \"sha256Fingerprint\": \"string\",\n          \"status\": \"CertificateValidity\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"x509File\": {\n          \"fileData\": \"string\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"primaryVerificationCert\": \"boolean\",\n        \"secondaryVerificationCert\": \"boolean\",\n        \"encryptionCert\": \"boolean\"\n      }\n    ],\n    \"blockEncryptionAlgorithm\": \"string\",\n    \"keyTransportAlgorithm\": \"string\",\n    \"signingSettings\": {\n      \"signingKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"algorithm\": \"string\",\n      \"includeRawKeyInSignature\": \"boolean\",\n      \"includeCertInSignature\": \"boolean\"\n    },\n    \"decryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"secondaryDecryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"outboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"sslAuthKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"validatePartnerCert\": \"boolean\"\n    },\n    \"inboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"verificationSubjectDN\": \"string\",\n      \"verificationIssuerDN\": \"string\",\n      \"certs\": [\n        {\n          \"certView\": {\n            \"id\": \"string\",\n            \"serialNumber\": \"string\",\n            \"subjectDN\": \"string\",\n            \"issuerDN\": \"string\",\n            \"validFrom\": \"string\",\n            \"expires\": \"string\",\n            \"keyAlgorithm\": \"string\",\n            \"keySize\": \"integer\",\n            \"signatureAlgorithm\": \"string\",\n            \"version\": \"integer\",\n            \"md5Fingerprint\": \"string\",\n            \"sha1Fingerprint\": \"string\",\n            \"sha256Fingerprint\": \"string\",\n            \"status\": \"CertificateValidity\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"x509File\": {\n            \"fileData\": \"string\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"primaryVerificationCert\": \"boolean\",\n          \"secondaryVerificationCert\": \"boolean\",\n          \"encryptionCert\": \"boolean\"\n        }\n      ],\n      \"requireSsl\": \"boolean\"\n    }\n  },\n  \"contactInfo\": {\n    \"company\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"phone\": \"string\"\n  },\n  \"licenseConnectionGroup\": \"string\",\n  \"applicationName\": \"string\",\n  \"applicationIconUrl\": \"string\",\n  \"loggingMode\": \"LoggingMode\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}"
							]
						},
						"description": "Update an SP connection with the matching ID. If the SP connection is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected. Note: A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}"
							]
						},
						"description": "Delete an SP connection with the specified ID. A 404 status code is returned for nonexistent IDs. Note: Only inactive connections can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/signingSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/signingSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"signingSettings"
							]
						},
						"description": "Get the SP connection's signature settings"
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/signingSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signingKeyPairRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"algorithm\": \"string\",\n  \"includeCertInSignature\": \"boolean\",\n  \"includeRawKeyInSignature\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/signingSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"signingSettings"
							]
						},
						"description": "Update the SP connection's signature settings"
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/certs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"certView\": {\n    \"id\": \"string\",\n    \"serialNumber\": \"string\",\n    \"subjectDN\": \"string\",\n    \"subjectAlternativeNames\": [\n      \"string\"\n    ],\n    \"issuerDN\": \"string\",\n    \"validFrom\": \"string\",\n    \"expires\": \"string\",\n    \"keyAlgorithm\": \"string\",\n    \"keySize\": \"integer\",\n    \"signatureAlgorithm\": \"string\",\n    \"version\": \"integer\",\n    \"sha1Fingerprint\": \"string\",\n    \"sha256Fingerprint\": \"string\",\n    \"status\": \"CertificateValidity\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  },\n  \"x509File\": {\n    \"id\": \"string\",\n    \"fileData\": \"string\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  },\n  \"activeVerificationCert\": \"boolean\",\n  \"primaryVerificationCert\": \"boolean\",\n  \"secondaryVerificationCert\": \"boolean\",\n  \"encryptionCert\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/certs",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"certs"
							]
						},
						"description": "Create an SP connection's verification certificate"
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/certs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/certs",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"certs"
							]
						},
						"description": "Get the SP connection's certificates"
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/certs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"certView\": {\n        \"id\": \"string\",\n        \"serialNumber\": \"string\",\n        \"subjectDN\": \"string\",\n        \"subjectAlternativeNames\": [\n          \"string\"\n        ],\n        \"issuerDN\": \"string\",\n        \"validFrom\": \"string\",\n        \"expires\": \"string\",\n        \"keyAlgorithm\": \"string\",\n        \"keySize\": \"integer\",\n        \"signatureAlgorithm\": \"string\",\n        \"version\": \"integer\",\n        \"sha1Fingerprint\": \"string\",\n        \"sha256Fingerprint\": \"string\",\n        \"status\": \"CertificateValidity\",\n        \"cryptoProvider\": \"CryptoProvider\"\n      },\n      \"x509File\": {\n        \"id\": \"string\",\n        \"fileData\": \"string\",\n        \"cryptoProvider\": \"CryptoProvider\"\n      },\n      \"activeVerificationCert\": \"boolean\",\n      \"primaryVerificationCert\": \"boolean\",\n      \"secondaryVerificationCert\": \"boolean\",\n      \"encryptionCert\": \"boolean\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/certs",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"certs"
							]
						},
						"description": "Update the SP connection's certificates."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/decryptionKeys",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/decryptionKeys",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"decryptionKeys"
							]
						},
						"description": "Get the decryption keys of an SP connection."
					},
					"response": []
				},
				{
					"name": "/idp/spConnections/{id}/credentials/decryptionKeys",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"primaryKeyRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"secondaryKeyPairRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/spConnections/{id}/credentials/decryptionKeys",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"spConnections",
								"{id}",
								"credentials",
								"decryptionKeys"
							]
						},
						"description": "Update the SP connection's decryption keys"
					},
					"response": []
				}
			]
		},
		{
			"name": "/idp/stsRequestParametersContracts",
			"item": [
				{
					"name": "/idp/stsRequestParametersContracts",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/stsRequestParametersContracts",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"stsRequestParametersContracts"
							]
						},
						"description": "Get all STS Request Parameter Contracts"
					},
					"response": []
				},
				{
					"name": "/idp/stsRequestParametersContracts",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"parameters\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/stsRequestParametersContracts",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"stsRequestParametersContracts"
							]
						},
						"description": "Create an STS Request Parameters Contract"
					},
					"response": []
				},
				{
					"name": "/idp/stsRequestParametersContracts/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/stsRequestParametersContracts/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"stsRequestParametersContracts",
								"{id}"
							]
						},
						"description": "Get a STS Request Parameters Contract"
					},
					"response": []
				},
				{
					"name": "/idp/stsRequestParametersContracts/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"parameters\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/stsRequestParametersContracts/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"stsRequestParametersContracts",
								"{id}"
							]
						},
						"description": "Update a STS Request Parameters Contract"
					},
					"response": []
				},
				{
					"name": "/idp/stsRequestParametersContracts/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/stsRequestParametersContracts/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"stsRequestParametersContracts",
								"{id}"
							]
						},
						"description": "Delete a STS Request Parameters Contract"
					},
					"response": []
				}
			]
		},
		{
			"name": "/idp/tokenProcessors",
			"item": [
				{
					"name": "/idp/tokenProcessors/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors",
								"descriptors"
							]
						},
						"description": "Get all token processor plugin descriptors"
					},
					"response": []
				},
				{
					"name": "/idp/tokenProcessors/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get a token processor plugin descriptor.  A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/tokenProcessors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors"
							]
						},
						"description": "Get all token processors"
					},
					"response": []
				},
				{
					"name": "/idp/tokenProcessors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"maskOgnlValues\": \"boolean\",\n    \"inherited\": \"boolean\"\n  },\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors"
							]
						},
						"description": "Create a token processor.  If the token processor is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/idp/tokenProcessors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors",
								"{id}"
							]
						},
						"description": "Get a token processor.  A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/idp/tokenProcessors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\",\n        \"masked\": \"boolean\"\n      }\n    ],\n    \"maskOgnlValues\": \"boolean\",\n    \"inherited\": \"boolean\"\n  },\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors",
								"{id}"
							]
						},
						"description": "Update a token processor.  If the token processor is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/idp/tokenProcessors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idp/tokenProcessors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idp",
								"tokenProcessors",
								"{id}"
							]
						},
						"description": "Delete a token processor.  A 404 status code is returned for nonexistent IDs. Note: Only token processors not in use can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/idpToSpAdapterMapping",
			"item": [
				{
					"name": "/idpToSpAdapterMapping",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idpToSpAdapterMapping",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idpToSpAdapterMapping"
							]
						},
						"description": "Get list of IdP-to-SP Adapter Mappings."
					},
					"response": []
				},
				{
					"name": "/idpToSpAdapterMapping",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"sourceId\": \"string\",\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  },\n  \"targetId\": \"string\",\n  \"defaultTargetResource\": \"string\",\n  \"licenseConnectionGroupAssignment\": \"string\",\n  \"applicationName\": \"string\",\n  \"applicationIconUrl\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idpToSpAdapterMapping",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idpToSpAdapterMapping"
							]
						},
						"description": "Create a new IdP-to-SP Adapter mapping."
					},
					"response": []
				},
				{
					"name": "/idpToSpAdapterMapping/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idpToSpAdapterMapping/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idpToSpAdapterMapping",
								"{id}"
							]
						},
						"description": "Get an IdP-to-SP Adapter Mapping."
					},
					"response": []
				},
				{
					"name": "/idpToSpAdapterMapping/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"sourceId\": \"string\",\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  },\n  \"targetId\": \"string\",\n  \"defaultTargetResource\": \"string\",\n  \"licenseConnectionGroupAssignment\": \"string\",\n  \"applicationName\": \"string\",\n  \"applicationIconUrl\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idpToSpAdapterMapping/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idpToSpAdapterMapping",
								"{id}"
							]
						},
						"description": "Update the specified IdP-to-SP Adapter mapping."
					},
					"response": []
				},
				{
					"name": "/idpToSpAdapterMapping/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/idpToSpAdapterMapping/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"idpToSpAdapterMapping",
								"{id}"
							]
						},
						"description": "Delete an Adapter to Adapter Mapping."
					},
					"response": []
				}
			]
		},
		{
			"name": "/kerberos/realms",
			"item": [
				{
					"name": "/kerberos/realms/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms",
								"settings"
							]
						},
						"description": "Gets the Kerberos Realms Settings."
					},
					"response": []
				},
				{
					"name": "/kerberos/realms/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"kdcTimeout\": \"string\",\n  \"kdcRetries\": \"string\",\n  \"forceTcp\": \"boolean\",\n  \"debugLogOutput\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms",
								"settings"
							]
						},
						"description": "Set/Update the Kerberos Realms Settings."
					},
					"response": []
				},
				{
					"name": "/kerberos/realms",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms"
							]
						},
						"description": "Gets the Kerberos Realms."
					},
					"response": []
				},
				{
					"name": "/kerberos/realms",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"keyDistributionCenter\": \"string\",\n  \"defaultRealm\": \"boolean\",\n  \"kerberosUsername\": \"string\",\n  \"kerberosPassword\": \"string\",\n  \"kerberosRealmName\": \"string\",\n  \"keyDistributionCenters\": [\n    \"string\"\n  ],\n  \"suppressDomainNameConcatenation\": \"boolean\",\n  \"id\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms"
							]
						},
						"description": "Create a new Kerberos Realm. If the Kerberos Realm is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/kerberos/realms/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms",
								"{id}"
							]
						},
						"description": "Get a Kerberos Realm with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/kerberos/realms/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"keyDistributionCenter\": \"string\",\n  \"defaultRealm\": \"boolean\",\n  \"kerberosUsername\": \"string\",\n  \"kerberosPassword\": \"string\",\n  \"kerberosRealmName\": \"string\",\n  \"keyDistributionCenters\": [\n    \"string\"\n  ],\n  \"suppressDomainNameConcatenation\": \"boolean\",\n  \"id\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms",
								"{id}"
							]
						},
						"description": "Update a Kerberos Realm with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/kerberos/realms/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/kerberos/realms/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"kerberos",
								"realms",
								"{id}"
							]
						},
						"description": "Delete a Kerberos Realm with the specified ID. A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/keyPairs",
			"item": [
				{
					"name": "/keyPairs/keyAlgorithms",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/keyAlgorithms",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"keyAlgorithms"
							]
						},
						"description": "Get list of the key algorithms supported for key pair generation."
					},
					"response": []
				}
			]
		},
		{
			"name": "/keyPairs/oauthOpenIdConnect",
			"item": [
				{
					"name": "/keyPairs/oauthOpenIdConnect",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/oauthOpenIdConnect",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"oauthOpenIdConnect"
							]
						},
						"description": "Get OAuth/Open ID Connect key settings"
					},
					"response": []
				},
				{
					"name": "/keyPairs/oauthOpenIdConnect",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"staticJwksEnabled\": \"boolean\",\n  \"p256ActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p256PreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p256PublishX5cParameter\": \"boolean\",\n  \"p384ActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p384PreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p384PublishX5cParameter\": \"boolean\",\n  \"p521ActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p521PreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p521PublishX5cParameter\": \"boolean\",\n  \"rsaActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"rsaPreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"rsaPublishX5cParameter\": \"boolean\",\n  \"p256DecryptionActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p256DecryptionPreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p256DecryptionPublishX5cParameter\": \"boolean\",\n  \"p384DecryptionActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p384DecryptionPreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p384DecryptionPublishX5cParameter\": \"boolean\",\n  \"p521DecryptionActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p521DecryptionPreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"p521DecryptionPublishX5cParameter\": \"boolean\",\n  \"rsaDecryptionActiveCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"rsaDecryptionPreviousCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"rsaDecryptionPublishX5cParameter\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/oauthOpenIdConnect",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"oauthOpenIdConnect"
							]
						},
						"description": "Update OAuth/Open ID Connect key settings"
					},
					"response": []
				}
			]
		},
		{
			"name": "/keyPairs/signing",
			"item": [
				{
					"name": "/keyPairs/signing",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing"
							]
						},
						"description": "Get list of key pairs."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\",\n  \"password\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/import",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"import"
							]
						},
						"description": "Import a new key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/generate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commonName\": \"string\",\n  \"organization\": \"string\",\n  \"organizationUnit\": \"string\",\n  \"city\": \"string\",\n  \"state\": \"string\",\n  \"country\": \"string\",\n  \"validDays\": \"integer\",\n  \"keyAlgorithm\": \"string\",\n  \"keySize\": \"integer\",\n  \"signatureAlgorithm\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/generate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"generate"
							]
						},
						"description": "Generate a new key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}"
							]
						},
						"description": "Retrieve details of a key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}"
							]
						},
						"description": "If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/csr",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/csr",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"csr"
							]
						},
						"description": "For a successful request, the PEM-encoded CSR file is directly returned as text and the response content type is application/pkcs10. If an error occurs, an ApiResult is returned in JSON format, and the content type is application/json."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/csr",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/csr",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"csr"
							]
						},
						"description": "Import a CSR response for this key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/pkcs12",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/pkcs12",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"pkcs12"
							]
						},
						"description": "For a successful request, the PKCS12 file is directly returned in binary format and the response content type is application/x-pkcs12. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json. Due to the sensitivity of the password parameter, the method for this operation is POST rather than GET."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/certificate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/certificate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"certificate"
							]
						},
						"description": "For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/rotationSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/rotationSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"rotationSettings"
							]
						},
						"description": "Retrieve details of rotation settings for a key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/rotationSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"creationBufferDays\": \"integer\",\n  \"activationBufferDays\": \"integer\",\n  \"validDays\": \"integer\",\n  \"keyAlgorithm\": \"string\",\n  \"keySize\": \"integer\",\n  \"signatureAlgorithm\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/rotationSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"rotationSettings"
							]
						},
						"description": "Add rotation settings to a key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/signing/{id}/rotationSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/signing/{id}/rotationSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"signing",
								"{id}",
								"rotationSettings"
							]
						},
						"description": "If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/keyPairs/sslClient",
			"item": [
				{
					"name": "/keyPairs/sslClient",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient"
							]
						},
						"description": "Get list of key pairs."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\",\n  \"password\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/import",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"import"
							]
						},
						"description": "Import a new key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/generate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commonName\": \"string\",\n  \"organization\": \"string\",\n  \"organizationUnit\": \"string\",\n  \"city\": \"string\",\n  \"state\": \"string\",\n  \"country\": \"string\",\n  \"validDays\": \"integer\",\n  \"keyAlgorithm\": \"string\",\n  \"keySize\": \"integer\",\n  \"signatureAlgorithm\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/generate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"generate"
							]
						},
						"description": "Generate a new key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"{id}"
							]
						},
						"description": "Retrieve details of a key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"{id}"
							]
						},
						"description": "If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/{id}/csr",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/{id}/csr",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"{id}",
								"csr"
							]
						},
						"description": "For a successful request, the PEM-encoded CSR file is directly returned as text and the response content type is application/pkcs10. If an error occurs, an ApiResult is returned in JSON format, and the content type is application/json."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/{id}/csr",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/{id}/csr",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"{id}",
								"csr"
							]
						},
						"description": "Import a CSR response for this key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/{id}/pkcs12",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/{id}/pkcs12",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"{id}",
								"pkcs12"
							]
						},
						"description": "For a successful request, the PKCS12 file is directly returned in binary format and the response content type is application/x-pkcs12. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json. Due to the sensitivity of the password parameter, the method for this operation is POST rather than GET."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslClient/{id}/certificate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslClient/{id}/certificate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslClient",
								"{id}",
								"certificate"
							]
						},
						"description": "For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json."
					},
					"response": []
				}
			]
		},
		{
			"name": "/keyPairs/sslServer",
			"item": [
				{
					"name": "/keyPairs/sslServer",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer"
							]
						},
						"description": "Get list of key pairs."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\",\n  \"password\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/import",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"import"
							]
						},
						"description": "Import a new key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/generate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commonName\": \"string\",\n  \"organization\": \"string\",\n  \"organizationUnit\": \"string\",\n  \"city\": \"string\",\n  \"state\": \"string\",\n  \"country\": \"string\",\n  \"validDays\": \"integer\",\n  \"keyAlgorithm\": \"string\",\n  \"keySize\": \"integer\",\n  \"signatureAlgorithm\": \"string\",\n  \"cryptoProvider\": \"CryptoProvider\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/generate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"generate"
							]
						},
						"description": "Generate a new key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"{id}"
							]
						},
						"description": "Retrieve details of a key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"{id}"
							]
						},
						"description": "If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/{id}/csr",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/{id}/csr",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"{id}",
								"csr"
							]
						},
						"description": "For a successful request, the PEM-encoded CSR file is directly returned as text and the response content type is application/pkcs10. If an error occurs, an ApiResult is returned in JSON format, and the content type is application/json."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/{id}/csr",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/{id}/csr",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"{id}",
								"csr"
							]
						},
						"description": "Import a CSR response for this key pair."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/{id}/pkcs12",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/{id}/pkcs12",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"{id}",
								"pkcs12"
							]
						},
						"description": "For a successful request, the PKCS12 file is directly returned in binary format and the response content type is application/x-pkcs12. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json. Due to the sensitivity of the password parameter, the method for this operation is POST rather than GET."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/{id}/certificate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/{id}/certificate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"{id}",
								"certificate"
							]
						},
						"description": "For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"settings"
							]
						},
						"description": "Get the SSL Server Certificate Settings."
					},
					"response": []
				},
				{
					"name": "/keyPairs/sslServer/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"runtimeServerCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"adminConsoleCertRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/keyPairs/sslServer/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"keyPairs",
								"sslServer",
								"settings"
							]
						},
						"description": "Update the SSL Server Certificate Settings."
					},
					"response": []
				}
			]
		},
		{
			"name": "/license",
			"item": [
				{
					"name": "/license/agreement",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/license/agreement",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"license",
								"agreement"
							]
						},
						"description": "Get the license agreement link"
					},
					"response": []
				},
				{
					"name": "/license/agreement",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"licenseAgreementUrl\": \"string\",\n  \"accepted\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/license/agreement",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"license",
								"agreement"
							]
						},
						"description": "Accept license agreement"
					},
					"response": []
				},
				{
					"name": "/license",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/license",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"license"
							]
						},
						"description": "Get a license summary"
					},
					"response": []
				},
				{
					"name": "/license",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileData\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/license",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"license"
							]
						},
						"description": "Import a license"
					},
					"response": []
				}
			]
		},
		{
			"name": "/localIdentity/identityProfiles",
			"item": [
				{
					"name": "/localIdentity/identityProfiles",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/localIdentity/identityProfiles",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"localIdentity",
								"identityProfiles"
							],
							"query": [
								{
									"key": "page",
									"value": "",
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": "",
									"description": "Number of local identity profiles per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "",
									"description": "Filter criteria limits the local identity profiles that are returned to only those that match it. The filter criteria is compared to the local identity profile name and ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get all local identity profiles"
					},
					"response": []
				},
				{
					"name": "/localIdentity/identityProfiles",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"apcId\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"authSources\": [\n    {\n      \"id\": \"string\",\n      \"source\": \"string\"\n    }\n  ],\n  \"authSourceUpdatePolicy\": {\n    \"storeAttributes\": \"boolean\",\n    \"retainAttributes\": \"boolean\",\n    \"updateAttributes\": \"boolean\",\n    \"updateInterval\": \"number\"\n  },\n  \"registrationEnabled\": \"boolean\",\n  \"registrationConfig\": {\n    \"captchaEnabled\": \"boolean\",\n    \"templateName\": \"string\"\n  },\n  \"profileConfig\": {\n    \"deleteIdentityEnabled\": \"boolean\",\n    \"templateName\": \"string\"\n  },\n  \"fieldConfig\": {\n    \"fields\": [\n      {\n        \"type\": \"LocalIdentityFieldType\",\n        \"id\": \"string\",\n        \"label\": \"string\",\n        \"registrationPageField\": \"boolean\",\n        \"profilePageField\": \"boolean\",\n        \"attributes\": {\n          \"key\": \"boolean\"\n        }\n      }\n    ]\n  },\n  \"emailVerificationConfig\": {\n    \"verifyEmailTemplateName\": \"string\",\n    \"emailVerificationSentTemplateName\": \"string\",\n    \"emailVerificationSuccessTemplateName\": \"string\",\n    \"emailVerificationErrorTemplateName\": \"string\",\n    \"otlTimeToLive\": \"integer\",\n    \"fieldForEmailToVerify\": \"string\",\n    \"fieldStoringVerificationStatus\": \"string\",\n    \"emailVerificationEnabled\": \"boolean\",\n    \"notificationPublisherRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"dataStoreConfig\": {\n    \"type\": \"DataStoreType\",\n    \"dataStoreRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"dataStoreMapping\": {\n      \"key\": {\n        \"type\": \"DataStoreType\",\n        \"name\": \"string\",\n        \"metadata\": \"Map[string,string]\"\n      }\n    }\n  },\n  \"profileEnabled\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/localIdentity/identityProfiles",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"localIdentity",
								"identityProfiles"
							]
						},
						"description": "Create a local identity profile.  If the local identity profile is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/localIdentity/identityProfiles/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/localIdentity/identityProfiles/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"localIdentity",
								"identityProfiles",
								"{id}"
							]
						},
						"description": "Get a local identity profile.  A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/localIdentity/identityProfiles/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"apcId\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"authSources\": [\n    {\n      \"id\": \"string\",\n      \"source\": \"string\"\n    }\n  ],\n  \"authSourceUpdatePolicy\": {\n    \"storeAttributes\": \"boolean\",\n    \"retainAttributes\": \"boolean\",\n    \"updateAttributes\": \"boolean\",\n    \"updateInterval\": \"number\"\n  },\n  \"registrationEnabled\": \"boolean\",\n  \"registrationConfig\": {\n    \"captchaEnabled\": \"boolean\",\n    \"templateName\": \"string\"\n  },\n  \"profileConfig\": {\n    \"deleteIdentityEnabled\": \"boolean\",\n    \"templateName\": \"string\"\n  },\n  \"fieldConfig\": {\n    \"fields\": [\n      {\n        \"type\": \"LocalIdentityFieldType\",\n        \"id\": \"string\",\n        \"label\": \"string\",\n        \"registrationPageField\": \"boolean\",\n        \"profilePageField\": \"boolean\",\n        \"attributes\": {\n          \"key\": \"boolean\"\n        }\n      }\n    ]\n  },\n  \"emailVerificationConfig\": {\n    \"verifyEmailTemplateName\": \"string\",\n    \"emailVerificationSentTemplateName\": \"string\",\n    \"emailVerificationSuccessTemplateName\": \"string\",\n    \"emailVerificationErrorTemplateName\": \"string\",\n    \"otlTimeToLive\": \"integer\",\n    \"fieldForEmailToVerify\": \"string\",\n    \"fieldStoringVerificationStatus\": \"string\",\n    \"emailVerificationEnabled\": \"boolean\",\n    \"notificationPublisherRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"dataStoreConfig\": {\n    \"type\": \"DataStoreType\",\n    \"dataStoreRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"dataStoreMapping\": {\n      \"key\": {\n        \"type\": \"DataStoreType\",\n        \"name\": \"string\",\n        \"metadata\": \"Map[string,string]\"\n      }\n    }\n  },\n  \"profileEnabled\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/localIdentity/identityProfiles/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"localIdentity",
								"identityProfiles",
								"{id}"
							]
						},
						"description": "Update a local identity profile.  A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/localIdentity/identityProfiles/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/localIdentity/identityProfiles/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"localIdentity",
								"identityProfiles",
								"{id}"
							]
						},
						"description": "Delete a local identity profile.  A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/metadataUrls",
			"item": [
				{
					"name": "/metadataUrls",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/metadataUrls",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"metadataUrls"
							]
						},
						"description": "Get a list of Metadata URLs."
					},
					"response": []
				},
				{
					"name": "/metadataUrls",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"url\": \"string\",\n  \"certView\": {\n    \"id\": \"string\",\n    \"serialNumber\": \"string\",\n    \"subjectDN\": \"string\",\n    \"issuerDN\": \"string\",\n    \"validFrom\": \"string\",\n    \"expires\": \"string\",\n    \"keyAlgorithm\": \"string\",\n    \"keySize\": \"integer\",\n    \"signatureAlgorithm\": \"string\",\n    \"version\": \"integer\",\n    \"md5Fingerprint\": \"string\",\n    \"sha1Fingerprint\": \"string\",\n    \"sha256Fingerprint\": \"string\",\n    \"status\": \"CertificateValidity\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  },\n  \"x509File\": {\n    \"fileData\": \"string\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/metadataUrls",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"metadataUrls"
							]
						},
						"description": "Add a new Metadata URL. If the Metadata URL is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/metadataUrls/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/metadataUrls/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"metadataUrls",
								"{id}"
							]
						},
						"description": "Get a Metadata URL with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/metadataUrls/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"url\": \"string\",\n  \"certView\": {\n    \"id\": \"string\",\n    \"serialNumber\": \"string\",\n    \"subjectDN\": \"string\",\n    \"issuerDN\": \"string\",\n    \"validFrom\": \"string\",\n    \"expires\": \"string\",\n    \"keyAlgorithm\": \"string\",\n    \"keySize\": \"integer\",\n    \"signatureAlgorithm\": \"string\",\n    \"version\": \"integer\",\n    \"md5Fingerprint\": \"string\",\n    \"sha1Fingerprint\": \"string\",\n    \"sha256Fingerprint\": \"string\",\n    \"status\": \"CertificateValidity\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  },\n  \"x509File\": {\n    \"fileData\": \"string\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/metadataUrls/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"metadataUrls",
								"{id}"
							]
						},
						"description": "Update a Metadata URL by ID. If the Metadata URL is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/metadataUrls/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/metadataUrls/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"metadataUrls",
								"{id}"
							]
						},
						"description": "Delete Metadata URL with the specified ID. A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/notificationPublishers",
			"item": [
				{
					"name": "/notificationPublishers/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"settings"
							]
						},
						"description": "Get general notification publisher settings"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"defaultNotificationPublisherRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"settings"
							]
						},
						"description": "Update general notification publisher settings"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"descriptors"
							]
						},
						"description": "Get the list of available notificaiton publisher plugin descriptors"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of a notification publisher plugin descriptor"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers"
							]
						},
						"description": "Get all notification publisher plugins"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers"
							]
						},
						"description": "Create a notification publisher plugin"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"{id}"
							]
						},
						"description": "Get a notification publisher plugin"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"{id}"
							]
						},
						"description": "Update a notificaiton publisher plugin"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"{id}"
							]
						},
						"description": "Delete a notification publisher plugin"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/{id}/actions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/{id}/actions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"{id}",
								"actions"
							]
						},
						"description": "Get the actions for a notification publisher plugin"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/{id}/actions/{actionId}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/{id}/actions/{actionId}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"{id}",
								"actions",
								"{actionId}"
							]
						},
						"description": "Get a notification publisher plugin's action"
					},
					"response": []
				},
				{
					"name": "/notificationPublishers/{id}/actions/{actionId}/invokeAction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/notificationPublishers/{id}/actions/{actionId}/invokeAction",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"notificationPublishers",
								"{id}",
								"actions",
								"{actionId}",
								"invokeAction"
							]
						},
						"description": "Invoke an action for a notification publisher plugin"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/accessTokenManagers",
			"item": [
				{
					"name": "/oauth/accessTokenManagers/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"settings"
							]
						},
						"description": "Get general access token management settings."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"defaultAccessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"settings"
							]
						},
						"description": "Update general access token management settings."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"descriptors"
							]
						},
						"description": "Get the list of available token management plugin descriptors."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of a token management plugin descriptor."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers"
							]
						},
						"description": "Get a list of all token management plugin instances."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  },\n  \"selectionSettings\": {\n    \"inherited\": \"boolean\",\n    \"resourceUris\": [\n      \"string\"\n    ]\n  },\n  \"accessControlSettings\": {\n    \"inherited\": \"boolean\",\n    \"restrictClients\": \"boolean\",\n    \"allowedClients\": [\n      {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    ]\n  },\n  \"sessionValidationSettings\": {\n    \"inherited\": \"boolean\",\n    \"checkValidAuthnSession\": \"boolean\",\n    \"checkSessionRevocationStatus\": \"boolean\",\n    \"updateAuthnSessionActivity\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers"
							]
						},
						"description": "Create a token management plugin instance."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"{id}"
							]
						},
						"description": "Get a specific token management plugin instance."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  },\n  \"selectionSettings\": {\n    \"inherited\": \"boolean\",\n    \"resourceUris\": [\n      \"string\"\n    ]\n  },\n  \"accessControlSettings\": {\n    \"inherited\": \"boolean\",\n    \"restrictClients\": \"boolean\",\n    \"allowedClients\": [\n      {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    ]\n  },\n  \"sessionValidationSettings\": {\n    \"inherited\": \"boolean\",\n    \"checkValidAuthnSession\": \"boolean\",\n    \"checkSessionRevocationStatus\": \"boolean\",\n    \"updateAuthnSessionActivity\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"{id}"
							]
						},
						"description": "Update a token management plugin instance."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenManagers/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenManagers/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenManagers",
								"{id}"
							]
						},
						"description": "Delete a token management plugin instance."
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/accessTokenMappings",
			"item": [
				{
					"name": "/oauth/accessTokenMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenMappings"
							]
						},
						"description": "Get the list of Access Token Mappings."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"context\": {\n    \"type\": \"AccessTokenMappingType\",\n    \"contextRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"accessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenMappings"
							]
						},
						"description": "Create a new Access Token Mapping. If the mapping is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenMappings",
								"{id}"
							]
						},
						"description": "Find the Access Token Mapping by its ID."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"context\": {\n    \"type\": \"AccessTokenMappingType\",\n    \"contextRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"accessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenMappings",
								"{id}"
							]
						},
						"description": "Update an Access Token Mapping with the matching ID. If the mapping is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected. Note: A 404 status code is returned for nonexistent mapping ID."
					},
					"response": []
				},
				{
					"name": "/oauth/accessTokenMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/accessTokenMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"accessTokenMappings",
								"{id}"
							]
						},
						"description": "Delete an Access Token Mapping."
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/authenticationPolicyContractMappings",
			"item": [
				{
					"name": "/oauth/authenticationPolicyContractMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authenticationPolicyContractMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authenticationPolicyContractMappings"
							]
						},
						"description": "Get the list of authentication policy contract to persistent grant mappings."
					},
					"response": []
				},
				{
					"name": "/oauth/authenticationPolicyContractMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"authenticationPolicyContractRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authenticationPolicyContractMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authenticationPolicyContractMappings"
							]
						},
						"description": "Create a new authentication policy contract to persistent grant mapping. If a mapping can't be created, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/oauth/authenticationPolicyContractMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authenticationPolicyContractMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authenticationPolicyContractMappings",
								"{id}"
							]
						},
						"description": "Find the authentication policy contract to persistent grant mapping by ID."
					},
					"response": []
				},
				{
					"name": "/oauth/authenticationPolicyContractMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"authenticationPolicyContractRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authenticationPolicyContractMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authenticationPolicyContractMappings",
								"{id}"
							]
						},
						"description": "Update an authentication policy contract to persistent grant mapping."
					},
					"response": []
				},
				{
					"name": "/oauth/authenticationPolicyContractMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authenticationPolicyContractMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authenticationPolicyContractMappings",
								"{id}"
							]
						},
						"description": "Delete an authentication policy contract to persistent grant mapping."
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/authServerSettings",
			"item": [
				{
					"name": "/oauth/authServerSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings"
							]
						},
						"description": "Get the Authorization Server Settings."
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"defaultScopeDescription\": \"string\",\n  \"scopes\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"dynamic\": \"boolean\"\n    }\n  ],\n  \"scopeGroups\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"scopes\": [\n        \"string\"\n      ]\n    }\n  ],\n  \"exclusiveScopes\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"dynamic\": \"boolean\"\n    }\n  ],\n  \"exclusiveScopeGroups\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"scopes\": [\n        \"string\"\n      ]\n    }\n  ],\n  \"authorizationCodeTimeout\": \"integer\",\n  \"authorizationCodeEntropy\": \"integer\",\n  \"trackUserSessionsForLogout\": \"boolean\",\n  \"tokenEndpointBaseUrl\": \"string\",\n  \"persistentGrantLifetime\": \"integer\",\n  \"persistentGrantLifetimeUnit\": \"PersistentGrantLifetimeUnit\",\n  \"persistentGrantIdleTimeout\": \"integer\",\n  \"persistentGrantIdleTimeoutTimeUnit\": \"PersistentGrantLifetimeUnit\",\n  \"refreshTokenLength\": \"integer\",\n  \"rollRefreshTokenValues\": \"boolean\",\n  \"refreshRollingInterval\": \"integer\",\n  \"persistentGrantReuseGrantTypes\": [\n    \"GrantType\"\n  ],\n  \"persistentGrantContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"bypassAuthorizationForApprovedGrants\": \"boolean\",\n  \"allowUnidentifiedClientROCreds\": \"boolean\",\n  \"allowedOrigins\": [\n    \"string\"\n  ],\n  \"allowUnidentifiedClientExtensionGrants\": \"boolean\",\n  \"adminWebServicePcvRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"atmIdForOAuthGrantManagement\": \"string\",\n  \"scopeForOAuthGrantManagement\": \"string\",\n  \"userAuthorizationUrl\": \"string\",\n  \"registeredAuthorizationPath\": \"string\",\n  \"pendingAuthorizationTimeout\": \"integer\",\n  \"devicePollingInterval\": \"integer\",\n  \"bypassActivationCodeConfirmation\": \"boolean\",\n  \"userAuthorizationConsentPageSetting\": \"UserAuthorizationConsentPageSetting\",\n  \"userAuthorizationConsentAdapter\": \"string\",\n  \"approvedScopesAttribute\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings"
							]
						},
						"description": "Update the Authorization Server Settings."
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopes",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"dynamic\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopes"
							]
						},
						"description": "Create a common scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopes/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopes",
								"{name}"
							]
						},
						"description": "Get a common scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopes/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"dynamic\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopes",
								"{name}"
							]
						},
						"description": "Update a common scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopes/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopes",
								"{name}"
							]
						},
						"description": "Delete a common scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopeGroups",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"scopes\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopeGroups",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopeGroups"
							]
						},
						"description": "Create a common scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopeGroups/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopeGroups/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopeGroups",
								"{name}"
							]
						},
						"description": "Get a common scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopeGroups/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"scopes\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopeGroups/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopeGroups",
								"{name}"
							]
						},
						"description": "Update a common scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/commonScopeGroups/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopeGroups/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"commonScopeGroups",
								"{name}"
							]
						},
						"description": "Delete a common scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopes",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"dynamic\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopes"
							]
						},
						"description": "Create an exclusive scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopes/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopes",
								"{name}"
							]
						},
						"description": "Get an exclusive scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopes/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"dynamic\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopes",
								"{name}"
							]
						},
						"description": "Update an exclusive scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopes/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopes/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopes",
								"{name}"
							]
						},
						"description": "Delete an exclusive scope"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopeGroups",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"scopes\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopeGroups",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopeGroups"
							]
						},
						"description": "Create an exclusive scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopeGroups",
								"{name}"
							]
						},
						"description": "Get an exclusive scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"scopes\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopeGroups",
								"{name}"
							]
						},
						"description": "Update an exclusive scope group"
					},
					"response": []
				},
				{
					"name": "/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"authServerSettings",
								"scopes",
								"exclusiveScopeGroups",
								"{name}"
							]
						},
						"description": "Delete an exclusive scope group"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/cibaServerPolicy",
			"item": [
				{
					"name": "/oauth/cibaServerPolicy/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"settings"
							]
						},
						"description": "Get general ciba server policy settings"
					},
					"response": []
				},
				{
					"name": "/oauth/cibaServerPolicy/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"defaultRequestPolicyRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"settings"
							]
						},
						"description": "Update general ciba server policy settings"
					},
					"response": []
				},
				{
					"name": "/oauth/cibaServerPolicy/requestPolicies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/requestPolicies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"requestPolicies"
							]
						},
						"description": "Get all ciba server request policies"
					},
					"response": []
				},
				{
					"name": "/oauth/cibaServerPolicy/requestPolicies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"authenticatorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"userCodePcvRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"transactionLifetime\": \"integer\",\n  \"allowUnsignedLoginHintToken\": \"boolean\",\n  \"requireTokenForIdentityHint\": \"boolean\",\n  \"alternativeLoginHintTokenIssuers\": [\n    {\n      \"issuer\": \"string\",\n      \"jwksURL\": \"string\",\n      \"jwks\": \"string\"\n    }\n  ],\n  \"identityHintContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"identityHintContractFulfillment\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    }\n  },\n  \"identityHintMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/requestPolicies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"requestPolicies"
							]
						},
						"description": "Create a ciba server request policy"
					},
					"response": []
				},
				{
					"name": "/oauth/cibaServerPolicy/requestPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/requestPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"requestPolicies",
								"{id}"
							]
						},
						"description": "Get a ciba server request policy"
					},
					"response": []
				},
				{
					"name": "/oauth/cibaServerPolicy/requestPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"authenticatorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"userCodePcvRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"transactionLifetime\": \"integer\",\n  \"allowUnsignedLoginHintToken\": \"boolean\",\n  \"requireTokenForIdentityHint\": \"boolean\",\n  \"alternativeLoginHintTokenIssuers\": [\n    {\n      \"issuer\": \"string\",\n      \"jwksURL\": \"string\",\n      \"jwks\": \"string\"\n    }\n  ],\n  \"identityHintContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"identityHintContractFulfillment\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    }\n  },\n  \"identityHintMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/requestPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"requestPolicies",
								"{id}"
							]
						},
						"description": "Update a ciba server request policy"
					},
					"response": []
				},
				{
					"name": "/oauth/cibaServerPolicy/requestPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/cibaServerPolicy/requestPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"cibaServerPolicy",
								"requestPolicies",
								"{id}"
							]
						},
						"description": "Delete a ciba server request policy"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/clientRegistrationPolicies",
			"item": [
				{
					"name": "/oauth/clientRegistrationPolicies/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies",
								"descriptors"
							]
						},
						"description": "Get the client registration policy plugin descriptors"
					},
					"response": []
				},
				{
					"name": "/oauth/clientRegistrationPolicies/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get a client registration policy plugin descriptor"
					},
					"response": []
				},
				{
					"name": "/oauth/clientRegistrationPolicies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies"
							]
						},
						"description": "Get all client registration policies"
					},
					"response": []
				},
				{
					"name": "/oauth/clientRegistrationPolicies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies"
							]
						},
						"description": "Create a client registration policy"
					},
					"response": []
				},
				{
					"name": "/oauth/clientRegistrationPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies",
								"{id}"
							]
						},
						"description": "Get a client registration policy"
					},
					"response": []
				},
				{
					"name": "/oauth/clientRegistrationPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies",
								"{id}"
							]
						},
						"description": "Update a client registration policy"
					},
					"response": []
				},
				{
					"name": "/oauth/clientRegistrationPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientRegistrationPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientRegistrationPolicies",
								"{id}"
							]
						},
						"description": "Delete a client registration policy"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/clients",
			"item": [
				{
					"name": "/oauth/clients",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients"
							],
							"query": [
								{
									"key": "page",
									"value": "",
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": "",
									"description": "Number of OAuth Clients per page (uncapped if unspecified)",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "",
									"description": "Filter criteria limits the OAuth clients that are returned to only those that match it. The filter criteria is compared to the OAuth client name and ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get the list of OAuth clients."
					},
					"response": []
				},
				{
					"name": "/oauth/clients",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientId\": \"string\",\n  \"redirectUris\": [\n    \"string\"\n  ],\n  \"grantTypes\": [\n    \"GrantType\"\n  ],\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"logoUrl\": \"string\",\n  \"defaultAccessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"validateUsingAllEligibleAtms\": \"boolean\",\n  \"refreshRolling\": \"RefreshRollingType\",\n  \"persistentGrantExpirationType\": \"PersistentGrantLifetimeType\",\n  \"persistentGrantExpirationTime\": \"integer\",\n  \"persistentGrantExpirationTimeUnit\": \"PersistentGrantLifetimeUnit\",\n  \"bypassApprovalPage\": \"boolean\",\n  \"restrictScopes\": \"boolean\",\n  \"restrictedScopes\": [\n    \"string\"\n  ],\n  \"requireSignedRequests\": \"boolean\",\n  \"oidcPolicy\": {\n    \"idTokenSigningAlgorithm\": \"SigningAlgorithm\",\n    \"policyGroup\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"grantAccessSessionRevocationApi\": \"boolean\",\n    \"pingAccessLogoutCapable\": \"boolean\",\n    \"logoutUris\": [\n      \"string\"\n    ]\n  },\n  \"clientAuth\": {\n    \"type\": \"ClientAuthType\",\n    \"secret\": \"string\",\n    \"encryptedSecret\": \"string\",\n    \"clientCertIssuerDn\": \"string\",\n    \"clientCertSubjectDn\": \"string\",\n    \"enforceReplayPrevention\": \"boolean\"\n  },\n  \"jwksSettings\": {\n    \"jwksUrl\": \"string\",\n    \"jwks\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients"
							]
						},
						"description": "Create a new OAuth client. If an OAuth client can't be created, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/oauth/clients/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients",
								"{id}"
							]
						},
						"description": "Find the OAuth client by ID."
					},
					"response": []
				},
				{
					"name": "/oauth/clients/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientId\": \"string\",\n  \"redirectUris\": [\n    \"string\"\n  ],\n  \"grantTypes\": [\n    \"GrantType\"\n  ],\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"logoUrl\": \"string\",\n  \"defaultAccessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"validateUsingAllEligibleAtms\": \"boolean\",\n  \"refreshRolling\": \"RefreshRollingType\",\n  \"persistentGrantExpirationType\": \"PersistentGrantLifetimeType\",\n  \"persistentGrantExpirationTime\": \"integer\",\n  \"persistentGrantExpirationTimeUnit\": \"PersistentGrantLifetimeUnit\",\n  \"bypassApprovalPage\": \"boolean\",\n  \"restrictScopes\": \"boolean\",\n  \"restrictedScopes\": [\n    \"string\"\n  ],\n  \"requireSignedRequests\": \"boolean\",\n  \"oidcPolicy\": {\n    \"idTokenSigningAlgorithm\": \"SigningAlgorithm\",\n    \"policyGroup\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"grantAccessSessionRevocationApi\": \"boolean\",\n    \"pingAccessLogoutCapable\": \"boolean\",\n    \"logoutUris\": [\n      \"string\"\n    ]\n  },\n  \"clientAuth\": {\n    \"type\": \"ClientAuthType\",\n    \"secret\": \"string\",\n    \"encryptedSecret\": \"string\",\n    \"clientCertIssuerDn\": \"string\",\n    \"clientCertSubjectDn\": \"string\",\n    \"enforceReplayPrevention\": \"boolean\"\n  },\n  \"jwksSettings\": {\n    \"jwksUrl\": \"string\",\n    \"jwks\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients",
								"{id}"
							]
						},
						"description": "Updates the OAuth client."
					},
					"response": []
				},
				{
					"name": "/oauth/clients/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients",
								"{id}"
							]
						},
						"description": "Delete an OAuth client."
					},
					"response": []
				},
				{
					"name": "/oauth/clients/{id}/clientAuth/clientSecret",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients/{id}/clientAuth/clientSecret",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients",
								"{id}",
								"clientAuth",
								"clientSecret"
							]
						},
						"description": "Get the client secret of an OAuth Client"
					},
					"response": []
				},
				{
					"name": "/oauth/clients/{id}/clientAuth/clientSecret",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"secret\": \"string\",\n  \"encryptedSecret\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clients/{id}/clientAuth/clientSecret",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clients",
								"{id}",
								"clientAuth",
								"clientSecret"
							]
						},
						"description": "Update the client secret of an OAuth client"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/clientSettings",
			"item": [
				{
					"name": "/oauth/clientSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientSettings"
							]
						},
						"description": "Get the OAuth client configuration settings"
					},
					"response": []
				},
				{
					"name": "/oauth/clientSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientMetadata\": [\n    {\n      \"parameter\": \"string\",\n      \"description\": \"string\",\n      \"multiValued\": \"boolean\"\n    }\n  ],\n  \"dynamicClientRegistration\": {\n    \"initialAccessTokenScope\": \"string\",\n    \"restrictCommonScopes\": \"boolean\",\n    \"restrictedCommonScopes\": [\n      \"string\"\n    ],\n    \"allowedExclusiveScopes\": [\n      \"string\"\n    ],\n    \"enforceReplayPrevention\": \"boolean\",\n    \"requestPolicyRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"requireSignedRequests\": \"boolean\",\n    \"defaultAccessTokenManagerRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"persistentGrantExpirationType\": \"PersistentGrantLifetimeType\",\n    \"persistentGrantExpirationTime\": \"integer\",\n    \"persistentGrantExpirationTimeUnit\": \"PersistentGrantLifetimeUnit\",\n    \"persistentGrantIdleTimeoutType\": \"PersistentGrantLifetimeType\",\n    \"persistentGrantIdleTimeout\": \"integer\",\n    \"persistentGrantIdleTimeoutTimeUnit\": \"PersistentGrantLifetimeUnit\",\n    \"clientCertIssuerType\": \"ClientCertificateIssuerType\",\n    \"clientCertIssuerRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"refreshRolling\": \"RefreshRollingType\",\n    \"oidcPolicy\": {\n      \"idTokenSigningAlgorithm\": \"SigningAlgorithm\",\n      \"idTokenEncryptionAlgorithm\": \"EncryptionAlgorithm\",\n      \"idTokenContentEncryptionAlgorithm\": \"ContentEncryptionAlgorithm\",\n      \"policyGroup\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    },\n    \"policyRefs\": [\n      {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"deviceFlowSettingType\": \"DeviceFlowSettingType\",\n    \"userAuthorizationUrlOverride\": \"string\",\n    \"pendingAuthorizationTimeoutOverride\": \"integer\",\n    \"devicePollingIntervalOverride\": \"integer\",\n    \"bypassActivationCodeConfirmationOverride\": \"boolean\",\n    \"requireProofKeyForCodeExchange\": \"boolean\",\n    \"cibaPollingInterval\": \"integer\",\n    \"cibaRequireSignedRequests\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/clientSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"clientSettings"
							]
						},
						"description": "Update the OAuth client configuration settings"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/idpAdapterMappings",
			"item": [
				{
					"name": "/oauth/idpAdapterMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/idpAdapterMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"idpAdapterMappings"
							]
						},
						"description": "Get the list of IdP adapter mappings."
					},
					"response": []
				},
				{
					"name": "/oauth/idpAdapterMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"idpAdapterRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/idpAdapterMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"idpAdapterMappings"
							]
						},
						"description": "Create a new IdP adapter mapping. If an IdP adapter mapping can't be created, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/oauth/idpAdapterMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/idpAdapterMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"idpAdapterMappings",
								"{id}"
							]
						},
						"description": "Find the IdP adapter mapping by the ID."
					},
					"response": []
				},
				{
					"name": "/oauth/idpAdapterMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"idpAdapterRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/idpAdapterMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"idpAdapterMappings",
								"{id}"
							]
						},
						"description": "Update an IdP adapter mapping."
					},
					"response": []
				},
				{
					"name": "/oauth/idpAdapterMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/idpAdapterMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"idpAdapterMappings",
								"{id}"
							]
						},
						"description": "Delete an IdP adapter mapping."
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/openIdConnect",
			"item": [
				{
					"name": "/oauth/openIdConnect/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"settings"
							]
						},
						"description": "Get the OpenID Connect Settings."
					},
					"response": []
				},
				{
					"name": "/oauth/openIdConnect/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"defaultPolicyRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"sessionSettings\": {\n    \"trackUserSessionsForLogout\": \"boolean\",\n    \"revokeUserSessionOnLogout\": \"boolean\",\n    \"sessionRevocationLifetime\": \"integer\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"settings"
							]
						},
						"description": "Set the OpenID Connect Settings."
					},
					"response": []
				},
				{
					"name": "/oauth/openIdConnect/policies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/policies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"policies"
							]
						},
						"description": "Get list of OpenID Connect Policies."
					},
					"response": []
				},
				{
					"name": "/oauth/openIdConnect/policies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"accessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"idTokenLifetime\": \"integer\",\n  \"includeSriInIdToken\": \"boolean\",\n  \"includeUserInfoInIdToken\": \"boolean\",\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/policies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"policies"
							]
						},
						"description": "Create a new OpenID Connect Policy. If the OpenID Connect policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/oauth/openIdConnect/policies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/policies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"policies",
								"{id}"
							]
						},
						"description": "Get an OpenID Connect Policy with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/oauth/openIdConnect/policies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"accessTokenManagerRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"idTokenLifetime\": \"integer\",\n  \"includeSriInIdToken\": \"boolean\",\n  \"includeUserInfoInIdToken\": \"boolean\",\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"DataStoreType\",\n        \"dataStoreRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        }\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"key\": {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"value\": \"string\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": [\n        {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"attributeName\": \"string\",\n          \"condition\": \"ConditionType\",\n          \"value\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ],\n      \"expressionCriteria\": [\n        {\n          \"expression\": \"string\",\n          \"errorResult\": \"string\"\n        }\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/policies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"policies",
								"{id}"
							]
						},
						"description": "Update an OpenID Connect Policy with the matching ID. If the policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected. Note: A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/oauth/openIdConnect/policies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/openIdConnect/policies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"openIdConnect",
								"policies",
								"{id}"
							]
						},
						"description": "Delete an OpenID Connect Policy with the specified ID. A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/outOfBandAuthPlugins",
			"item": [
				{
					"name": "/oauth/outOfBandAuthPlugins/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"descriptors"
							]
						},
						"description": "Get the Out of Band authenticator plugin descriptors"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get an Out of Band authenticator plugin descriptor"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins"
							]
						},
						"description": "Get all Out of Band authenticator plugins"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins"
							]
						},
						"description": "Create an Out of Band authenticator plugin"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"{id}"
							]
						},
						"description": "Get an Out of Band authenticator plugin"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ]\n  },\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"{id}"
							]
						},
						"description": "Update an Out of Band authenticator plugin"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"{id}"
							]
						},
						"description": "Delete an Out of Band authenticator plugin"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/{id}/actions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/{id}/actions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"{id}",
								"actions"
							]
						},
						"description": "Get all actions for an Out of Band authenticator plugin"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/{id}/actions/{actionId}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/{id}/actions/{actionId}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"{id}",
								"actions",
								"{actionId}"
							]
						},
						"description": "Get an action of an Out of Band authenticator plugin"
					},
					"response": []
				},
				{
					"name": "/oauth/outOfBandAuthPlugins/{id}/actions/{actionId}/invokeAction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/outOfBandAuthPlugins/{id}/actions/{actionId}/invokeAction",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"outOfBandAuthPlugins",
								"{id}",
								"actions",
								"{actionId}",
								"invokeAction"
							]
						},
						"description": "Invokes an action for an Out of Bound authenticator plugin"
					},
					"response": []
				}
			]
		},
		{
			"name": "/oauth/resourceOwnerCredentialsMappings",
			"item": [
				{
					"name": "/oauth/resourceOwnerCredentialsMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/resourceOwnerCredentialsMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"resourceOwnerCredentialsMappings"
							]
						},
						"description": "Get the list of Resource Owner Credentials mappings."
					},
					"response": []
				},
				{
					"name": "/oauth/resourceOwnerCredentialsMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"passwordValidatorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/resourceOwnerCredentialsMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"resourceOwnerCredentialsMappings"
							]
						},
						"description": "Create a new Resource Owner Credentials mapping. If a Resource Owner Credentials mapping can't be created, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/oauth/resourceOwnerCredentialsMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/resourceOwnerCredentialsMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"resourceOwnerCredentialsMappings",
								"{id}"
							]
						},
						"description": "Find the Resource Owner Credentials mapping by the ID."
					},
					"response": []
				},
				{
					"name": "/oauth/resourceOwnerCredentialsMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"passwordValidatorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/resourceOwnerCredentialsMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"resourceOwnerCredentialsMappings",
								"{id}"
							]
						},
						"description": "Update a Resource Owner Credentials mapping."
					},
					"response": []
				},
				{
					"name": "/oauth/resourceOwnerCredentialsMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/oauth/resourceOwnerCredentialsMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"oauth",
								"resourceOwnerCredentialsMappings",
								"{id}"
							]
						},
						"description": "Delete a Resource Owner Credentials mapping."
					},
					"response": []
				}
			]
		},
		{
			"name": "/passwordCredentialValidators",
			"item": [
				{
					"name": "/passwordCredentialValidators/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators",
								"descriptors"
							]
						},
						"description": "Get a list of available password credential validator descriptors."
					},
					"response": []
				},
				{
					"name": "/passwordCredentialValidators/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of a password credential validator by ID. A 404 status code is returned for a nonexistent ID."
					},
					"response": []
				},
				{
					"name": "/passwordCredentialValidators",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators"
							]
						},
						"description": "Get the list of available password credential validators."
					},
					"response": []
				},
				{
					"name": "/passwordCredentialValidators",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators"
							]
						},
						"description": "Create a new password credential validator instance. If the password credential validator is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/passwordCredentialValidators/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators",
								"{id}"
							]
						},
						"description": "Get the configured password credential validator instance with the specified ID. A 404 status code is returned for a nonexistent ID."
					},
					"response": []
				},
				{
					"name": "/passwordCredentialValidators/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators",
								"{id}"
							]
						},
						"description": "Update a password credential validator instance. If the password credential validator is not properly configured, a 422 status code is returned along with a list of validation errors that need to be corrected."
					},
					"response": []
				},
				{
					"name": "/passwordCredentialValidators/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/passwordCredentialValidators/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"passwordCredentialValidators",
								"{id}"
							]
						},
						"description": "Delete a password credential validator instance with the specified ID. A 404 status code is returned for nonexistent IDs. Note: Only validators not in use can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the errors."
					},
					"response": []
				}
			]
		},
		{
			"name": "/redirectValidation",
			"item": [
				{
					"name": "/redirectValidation",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/redirectValidation",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"redirectValidation"
							]
						},
						"description": "Get the redirect validation settings"
					},
					"response": []
				},
				{
					"name": "/redirectValidation",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"redirectValidationLocalSettings\": {\n    \"enableTargetResourceValidationForSSO\": \"boolean\",\n    \"enableTargetResourceValidationForSLO\": \"boolean\",\n    \"enableTargetResourceValidationForIdpDiscovery\": \"boolean\",\n    \"enableInErrorResourceValidation\": \"boolean\",\n    \"whiteList\": [\n      {\n        \"targetResourceSSO\": \"boolean\",\n        \"targetResourceSLO\": \"boolean\",\n        \"inErrorResource\": \"boolean\",\n        \"idpDiscovery\": \"boolean\",\n        \"requireHttps\": \"boolean\",\n        \"validDomain\": \"string\",\n        \"validPath\": \"string\",\n        \"allowQueryAndFragment\": \"boolean\"\n      }\n    ]\n  },\n  \"redirectValidationPartnerSettings\": {\n    \"enableWreplyValidationSLO\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/redirectValidation",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"redirectValidation"
							]
						},
						"description": "Update the redirect validation settings"
					},
					"response": []
				}
			]
		},
		{
			"name": "/serverSettings",
			"item": [
				{
					"name": "/serverSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings"
							]
						},
						"description": "Gets the server settings."
					},
					"response": []
				},
				{
					"name": "/serverSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contactInfo\": {\n    \"company\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"phone\": \"string\"\n  },\n  \"notifications\": {\n    \"licenseEvents\": {\n      \"emailAddress\": \"string\"\n    },\n    \"certificateExpirations\": {\n      \"emailAddress\": \"string\",\n      \"initialWarningPeriod\": \"integer\",\n      \"finalWarningPeriod\": \"integer\"\n    },\n    \"notifyAdminUserPasswordChanges\": \"boolean\",\n    \"metadataNotificationSettings\": {\n      \"emailAddress\": \"string\"\n    }\n  },\n  \"rolesAndProtocols\": {\n    \"oauthRole\": {\n      \"enableOauth\": \"boolean\",\n      \"enableOpenIdConnect\": \"boolean\"\n    },\n    \"idpRole\": {\n      \"enable\": \"boolean\",\n      \"saml20Profile\": {\n        \"enable\": \"boolean\",\n        \"enableAutoConnect\": \"boolean\"\n      },\n      \"enableSaml11\": \"boolean\",\n      \"enableSaml10\": \"boolean\",\n      \"enableWsFed\": \"boolean\",\n      \"enableWsTrust\": \"boolean\"\n    },\n    \"spRole\": {\n      \"enable\": \"boolean\",\n      \"saml20Profile\": {\n        \"enable\": \"boolean\",\n        \"enableXASP\": \"boolean\",\n        \"enableAutoConnect\": \"boolean\"\n      },\n      \"enableSaml11\": \"boolean\",\n      \"enableSaml10\": \"boolean\",\n      \"enableWsFed\": \"boolean\",\n      \"enableWsTrust\": \"boolean\",\n      \"enableOpenIDConnect\": \"boolean\",\n      \"enableInboundProvisioning\": \"boolean\"\n    },\n    \"enableIdpDiscovery\": \"boolean\"\n  },\n  \"federationInfo\": {\n    \"baseUrl\": \"string\",\n    \"saml2EntityId\": \"string\",\n    \"autoConnectEntityId\": \"string\",\n    \"saml1xIssuerId\": \"string\",\n    \"saml1xSourceId\": \"string\",\n    \"wsfedRealm\": \"string\"\n  },\n  \"emailServer\": {\n    \"sourceAddr\": \"string\",\n    \"emailServer\": \"string\",\n    \"port\": \"integer\",\n    \"sslPort\": \"integer\",\n    \"timeout\": \"integer\",\n    \"retryAttempts\": \"integer\",\n    \"retryDelay\": \"integer\",\n    \"useSSL\": \"boolean\",\n    \"useTLS\": \"boolean\",\n    \"verifyHostname\": \"boolean\",\n    \"useDebugging\": \"boolean\",\n    \"username\": \"string\",\n    \"password\": \"string\",\n    \"encryptedPassword\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings"
							]
						},
						"description": "Update the server settings."
					},
					"response": []
				},
				{
					"name": "/serverSettings/notifications",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/notifications",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"notifications"
							]
						},
						"description": "Gets the notification settings."
					},
					"response": []
				},
				{
					"name": "/serverSettings/notifications",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"licenseEvents\": {\n    \"emailAddress\": \"string\"\n  },\n  \"certificateExpirations\": {\n    \"emailAddress\": \"string\",\n    \"initialWarningPeriod\": \"integer\",\n    \"finalWarningPeriod\": \"integer\"\n  },\n  \"notifyAdminUserPasswordChanges\": \"boolean\",\n  \"metadataNotificationSettings\": {\n    \"emailAddress\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/notifications",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"notifications"
							]
						},
						"description": "Update the notification settings."
					},
					"response": []
				},
				{
					"name": "(Deprecated) /serverSettings/emailServer",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/emailServer",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"emailServer"
							]
						},
						"description": "Gets the email server settings."
					},
					"response": []
				},
				{
					"name": "(Deprecated) /serverSettings/emailServer",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sourceAddr\": \"string\",\n  \"emailServer\": \"string\",\n  \"port\": \"integer\",\n  \"sslPort\": \"integer\",\n  \"timeout\": \"integer\",\n  \"retryAttempts\": \"integer\",\n  \"retryDelay\": \"integer\",\n  \"useSSL\": \"boolean\",\n  \"useTLS\": \"boolean\",\n  \"verifyHostname\": \"boolean\",\n  \"useDebugging\": \"boolean\",\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"encryptedPassword\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/emailServer?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"emailServer"
							],
							"query": [
								{
									"key": "validationEmail",
									"value": null,
									"disabled": true
								},
								{
									"key": "validateOnly",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "If the validationEmail is provided, an email will be sent to the validationEmail using the provided email server settings. The settings will be saved if the test email is successfully sent.\n\nQuery Parameter \"validationEmail\": The email address used to validate the email server settings.\nQuery Parameter \"validateOnly\": Only validation will be performed. Email server settings will not be saved."
					},
					"response": []
				},
				{
					"name": "/serverSettings/captchaSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/captchaSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"captchaSettings"
							]
						},
						"description": "Get the CAPTCHA settings"
					},
					"response": []
				},
				{
					"name": "/serverSettings/captchaSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"siteKey\": \"string\",\n  \"secretKey\": \"string\",\n  \"encryptedSecretKey\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/captchaSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"captchaSettings"
							]
						},
						"description": "Update the CAPTCHA settings"
					},
					"response": []
				},
				{
					"name": "/serverSettings/systemKeys",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/systemKeys",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"systemKeys"
							]
						},
						"description": "Get the System Keys"
					},
					"response": []
				},
				{
					"name": "/serverSettings/systemKeys/rotate",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/systemKeys/rotate",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"systemKeys",
								"rotate"
							]
						},
						"description": "Rotate the System Keys.  Upon rotation, the previous key will be replaced by the current key, the current key will be replaced by the pending key, while the newly generated key replaces the pending key. Periodic rotation can ensure optimal security of your environment."
					},
					"response": []
				},
				{
					"name": "/serverSettings/outboundProvisioning",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/outboundProvisioning",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"outboundProvisioning"
							]
						},
						"description": "Get the database used for outbound provisioning"
					},
					"response": []
				},
				{
					"name": "/serverSettings/outboundProvisioning",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dataStoreRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"synchronizationFrequency\": \"integer\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/serverSettings/outboundProvisioning",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"serverSettings",
								"outboundProvisioning"
							]
						},
						"description": "Update the database used for outbound provisioning"
					},
					"response": []
				}
			]
		},
		{
			"name": "/session",
			"item": [
				{
					"name": "/session/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"settings"
							]
						},
						"description": "Get general session management settings."
					},
					"response": []
				},
				{
					"name": "/session/settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"trackAdapterSessionsForLogout\": \"boolean\",\n  \"revokeUserSessionOnLogout\": \"boolean\",\n  \"sessionRevocationLifetime\": \"integer\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"settings"
							]
						},
						"description": "Update general session management settings."
					},
					"response": []
				},
				{
					"name": "/session/applicationSessionPolicy",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/applicationSessionPolicy",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"applicationSessionPolicy"
							]
						},
						"description": "Get the application session policy"
					},
					"response": []
				},
				{
					"name": "/session/applicationSessionPolicy",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idleTimeoutMins\": \"integer\",\n  \"maxTimeoutMins\": \"integer\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/applicationSessionPolicy",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"applicationSessionPolicy"
							]
						},
						"description": "Update the applicaiton session policy"
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies/global",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies/global",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies",
								"global"
							]
						},
						"description": "Get the global authentication session policy."
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies/global",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enableSessions\": \"boolean\",\n  \"persistentSessions\": \"boolean\",\n  \"idleTimeoutMins\": \"integer\",\n  \"idleTimeoutDisplayUnit\": \"SessionTimeUnit\",\n  \"maxTimeoutMins\": \"integer\",\n  \"maxTimeoutDisplayUnit\": \"SessionTimeUnit\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies/global",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies",
								"global"
							]
						},
						"description": "Update the global authentication session policy."
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies"
							]
						},
						"description": "Get a list of all session policies that are associated with specific authentication sources."
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"authenticationSource\": {\n    \"type\": \"AuthenticationSourceType\",\n    \"sourceRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"enableSessions\": \"boolean\",\n  \"persistent\": \"boolean\",\n  \"idleTimeoutMins\": \"integer\",\n  \"maxTimeoutMins\": \"integer\",\n  \"timeoutDisplayUnit\": \"SessionTimeUnit\",\n  \"authnContextSensitive\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies"
							]
						},
						"description": "Create a new session policy for a specified authentication source. If the session policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies",
								"{id}"
							]
						},
						"description": "Get the session policy with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"authenticationSource\": {\n    \"type\": \"AuthenticationSourceType\",\n    \"sourceRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"enableSessions\": \"boolean\",\n  \"persistent\": \"boolean\",\n  \"idleTimeoutMins\": \"integer\",\n  \"maxTimeoutMins\": \"integer\",\n  \"timeoutDisplayUnit\": \"SessionTimeUnit\",\n  \"authnContextSensitive\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies",
								"{id}"
							]
						},
						"description": "Update the session policy with the matching ID. If the policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/session/authenticationSessionPolicies/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/session/authenticationSessionPolicies/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"session",
								"authenticationSessionPolicies",
								"{id}"
							]
						},
						"description": "Delete the session policy with the specified ID. A 404 status code is returned for nonexistent IDs. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				}
			]
		},
		{
			"name": "/sp/adapters",
			"item": [
				{
					"name": "/sp/adapters/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"descriptors"
							]
						},
						"description": "Get the list of available SP adapter descriptors."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description of an SP adapter plugin by ID. A 404 status code is returned for nonexistant IDs."
					},
					"response": []
				},
				{
					"name": "/sp/adapters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": null,
									"description": "Number of adapters per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filter criteria limits the SP adapters that are returned to only those that match it. The filter criteria is compared to the SP adapter instance name and ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get the list of configured SP adapter instances."
					},
					"response": []
				},
				{
					"name": "/sp/adapters",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  },\n  \"targetApplicationInfo\": {\n    \"applicationName\": \"string\",\n    \"applicationIconUrl\": \"string\",\n    \"inherited\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters"
							]
						},
						"description": "Create a new SP adapter instance. If the SP adapter is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"{id}"
							]
						},
						"description": "Get the configured SP adapter instance with the specified ID. A 404 status code is returned for nonexistant IDs."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  },\n  \"targetApplicationInfo\": {\n    \"applicationName\": \"string\",\n    \"applicationIconUrl\": \"string\",\n    \"inherited\": \"boolean\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"{id}"
							]
						},
						"description": "Update an SP adapter instance. If the SP adapter is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"{id}"
							]
						},
						"description": "Delete an SP adapter instance with the specified ID. A 404 status code is returned for nonexistent IDs. Note: Only adapters not in use can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/{id}/actions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/{id}/actions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"{id}",
								"actions"
							]
						},
						"description": "List the actions for an SP adapter instance. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/{id}/actions/{actionId}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/{id}/actions/{actionId}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"{id}",
								"actions",
								"{actionId}"
							]
						},
						"description": "Find an SP adapter instance's action by ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/sp/adapters/{id}/actions/{actionId}/invokeAction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/{id}/actions/{actionId}/invokeAction",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"{id}",
								"actions",
								"{actionId}",
								"invokeAction"
							]
						},
						"description": "Invokes an action for an SP adapter instance. A 404 status code is returned for nonexistent IDs. If the action produces a download file, the file will be returned directly in the response. Otherwise an ActionResult will be returned."
					},
					"response": []
				},
				{
					"name": "(Deprecated) /sp/adapters/urlMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/urlMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"urlMappings"
							]
						},
						"description": "Get the mappings between URLs and SP adapters"
					},
					"response": []
				},
				{
					"name": "(Deprecated) /sp/adapters/urlMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"url\": \"string\",\n      \"adapterRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/adapters/urlMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"adapters",
								"urlMappings"
							]
						},
						"description": "Update the mappings between URLs and SP adapters"
					},
					"response": []
				}
			]
		},
		{
			"name": "/sp/authenticationPolicyContractMappings",
			"item": [
				{
					"name": "/sp/authenticationPolicyContractMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/authenticationPolicyContractMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"authenticationPolicyContractMappings"
							]
						},
						"description": "Get all of the APC-to-SP Adapter Mappings"
					},
					"response": []
				},
				{
					"name": "/sp/authenticationPolicyContractMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"sourceId\": \"string\",\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  },\n  \"targetId\": \"string\",\n  \"defaultTargetResource\": \"string\",\n  \"licenseConnectionGroupAssignment\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/authenticationPolicyContractMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"authenticationPolicyContractMappings"
							]
						},
						"description": "Create an APC-to-SP Adapter Mapping"
					},
					"response": []
				},
				{
					"name": "/sp/authenticationPolicyContractMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/authenticationPolicyContractMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"authenticationPolicyContractMappings",
								"{id}"
							]
						},
						"description": "Get an APC-to-SP Adapter Mapping"
					},
					"response": []
				},
				{
					"name": "/sp/authenticationPolicyContractMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"sourceId\": \"string\",\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  },\n  \"targetId\": \"string\",\n  \"defaultTargetResource\": \"string\",\n  \"licenseConnectionGroupAssignment\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/authenticationPolicyContractMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"authenticationPolicyContractMappings",
								"{id}"
							]
						},
						"description": "Update an APC-to-SP Adapter Mapping"
					},
					"response": []
				},
				{
					"name": "/sp/authenticationPolicyContractMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/authenticationPolicyContractMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"authenticationPolicyContractMappings",
								"{id}"
							]
						},
						"description": "Delete an APC-to-SP Adapter Mapping"
					},
					"response": []
				}
			]
		},
		{
			"name": "/sp/defaultUrls",
			"item": [
				{
					"name": "/sp/defaultUrls",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/defaultUrls",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"defaultUrls"
							]
						},
						"description": "Gets the SP Default URLs. These are Values that affect the user's experience when executing SP-initiated SSO operations."
					},
					"response": []
				},
				{
					"name": "/sp/defaultUrls",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssoSuccessUrl\": \"string\",\n  \"confirmSlo\": \"boolean\",\n  \"sloSuccessUrl\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/defaultUrls",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"defaultUrls"
							]
						},
						"description": "Update the SP Default URLs. Enter values that affect the user's experience when executing SP-initiated SSO operations."
					},
					"response": []
				}
			]
		},
		{
			"name": "/sp/idpConnections",
			"item": [
				{
					"name": "/sp/idpConnections",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections"
							],
							"query": [
								{
									"key": "entityId",
									"value": null,
									"description": "Entity ID of the connection to fetch (case-sensitive)",
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"description": "Page number to retrieve",
									"disabled": true
								},
								{
									"key": "numberPerPage",
									"value": null,
									"description": "Number of connections per page",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filter criteria limits the IdP connections that are returned to only those that match it. The filter criteria is compared to the IdP connection name and partner entity ID fields. The comparison is a case-insensitive partial match. No additional pattern based matching is supported.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all the OIDC, WS-Fed, SAML1.0, SAML1.1 and SAML 2.0 IdP connections."
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"ConnectionType\",\n  \"id\": \"string\",\n  \"entityId\": \"string\",\n  \"name\": \"string\",\n  \"active\": \"boolean\",\n  \"baseUrl\": \"string\",\n  \"defaultVirtualEntityId\": \"string\",\n  \"oidcClientCredentials\": {\n    \"clientId\": \"string\",\n    \"clientSecret\": \"string\",\n    \"encryptedSecret\": \"string\"\n  },\n  \"idpBrowserSso\": {\n    \"protocol\": \"Protocol\",\n    \"oidcProviderSettings\": {\n      \"scopes\": \"string\",\n      \"authorizationEndpoint\": \"string\",\n      \"loginType\": \"OIDCLoginType\",\n      \"authenticationScheme\": \"OIDCAuthenticationScheme\",\n      \"authenticationSigningAlgorithm\": \"SigningAlgorithm\",\n      \"requestSigningAlgorithm\": \"SigningAlgorithm\",\n      \"tokenEndpoint\": \"string\",\n      \"userInfoEndpoint\": \"string\",\n      \"jwksURL\": \"string\",\n      \"requestParameters\": [\n        {\n          \"name\": \"string\",\n          \"value\": \"string\",\n          \"applicationEndpointOverride\": \"boolean\"\n        }\n      ]\n    },\n    \"enabledProfiles\": [\n      \"Profile\"\n    ],\n    \"incomingBindings\": [\n      \"Binding\"\n    ],\n    \"urlWhitelistEntries\": [\n      {\n        \"validDomain\": \"string\",\n        \"validPath\": \"string\",\n        \"allowQueryAndFragment\": \"boolean\",\n        \"requireHttps\": \"boolean\"\n      }\n    ],\n    \"artifact\": {\n      \"lifetime\": \"integer\",\n      \"resolverLocations\": [\n        {\n          \"index\": \"integer\",\n          \"url\": \"string\"\n        }\n      ],\n      \"sourceId\": \"string\"\n    },\n    \"sloServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\",\n        \"responseUrl\": \"string\"\n      }\n    ],\n    \"ssoServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\"\n      }\n    ],\n    \"defaultTargetUrl\": \"string\",\n    \"authnContextMappings\": [\n      {\n        \"local\": \"string\",\n        \"remote\": \"string\"\n      }\n    ],\n    \"assertionsSigned\": \"boolean\",\n    \"signAuthnRequests\": \"boolean\",\n    \"decryptionPolicy\": {\n      \"assertionEncrypted\": \"boolean\",\n      \"attributesEncrypted\": \"boolean\",\n      \"subjectNameIdEncrypted\": \"boolean\",\n      \"sloEncryptSubjectNameID\": \"boolean\",\n      \"sloSubjectNameIDEncrypted\": \"boolean\"\n    },\n    \"idpIdentityMapping\": \"IdpIdentityMapping\",\n    \"attributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ]\n    },\n    \"adapterMappings\": [\n      {\n        \"spAdapterRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualEntityIds\": \"boolean\",\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"adapterOverrideSettings\": {\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"pluginDescriptorRef\": {\n            \"id\": \"string\",\n            \"location\": \"string\"\n          },\n          \"parentRef\": {\n            \"id\": \"string\",\n            \"location\": \"string\"\n          },\n          \"configuration\": {\n            \"tables\": [\n              {\n                \"name\": \"string\",\n                \"rows\": [\n                  {\n                    \"fields\": [\n                      {\n                        \"name\": \"string\",\n                        \"value\": \"string\",\n                        \"encryptedValue\": \"string\",\n                        \"inherited\": \"boolean\"\n                      }\n                    ]\n                  }\n                ],\n                \"inherited\": \"boolean\"\n              }\n            ],\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          },\n          \"attributeContract\": {\n            \"coreAttributes\": [\n              {\n                \"name\": \"string\"\n              }\n            ],\n            \"extendedAttributes\": [\n              {\n                \"name\": \"string\"\n              }\n            ],\n            \"inherited\": \"boolean\"\n          },\n          \"targetApplicationInfo\": {\n            \"applicationName\": \"string\",\n            \"applicationIconUrl\": \"string\",\n            \"inherited\": \"boolean\"\n          }\n        },\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"authenticationPolicyContractMappings\": [\n      {\n        \"authenticationPolicyContractRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualServerIds\": \"boolean\",\n        \"restrictedVirtualServerIds\": [\n          \"string\"\n        ],\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"messageCustomizations\": [\n      {\n        \"contextName\": \"string\",\n        \"messageExpression\": \"string\"\n      }\n    ],\n    \"ssoOAuthMapping\": {\n      \"attributeSources\": [\n        {\n          \"type\": \"DataStoreType\",\n          \"dataStoreRef\": {\n            \"id\": \"string\",\n            \"location\": \"string\"\n          },\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"attributeContractFulfillment\": {\n            \"key\": {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"value\": \"string\"\n            }\n          }\n        }\n      ],\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      },\n      \"issuanceCriteria\": {\n        \"conditionalCriteria\": [\n          {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"attributeName\": \"string\",\n            \"condition\": \"ConditionType\",\n            \"value\": \"string\",\n            \"errorResult\": \"string\"\n          }\n        ],\n        \"expressionCriteria\": [\n          {\n            \"expression\": \"string\",\n            \"errorResult\": \"string\"\n          }\n        ]\n      }\n    },\n    \"oauthAuthenticationPolicyContractRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"attributeQuery\": {\n    \"url\": \"string\",\n    \"nameMappings\": [\n      {\n        \"localName\": \"string\",\n        \"remoteName\": \"string\"\n      }\n    ],\n    \"policy\": {\n      \"requireSignedResponse\": \"boolean\",\n      \"requireSignedAssertion\": \"boolean\",\n      \"requireEncryptedAssertion\": \"boolean\",\n      \"signAttributeQuery\": \"boolean\",\n      \"encryptNameId\": \"boolean\",\n      \"maskAttributeValues\": \"boolean\"\n    }\n  },\n  \"idpOAuthGrantAttributeMapping\": {\n    \"accessTokenManagerMappings\": [\n      {\n        \"accessTokenManagerRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"idpOAuthAttributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ]\n    }\n  },\n  \"wsTrust\": {\n    \"attributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ]\n    },\n    \"generateLocalToken\": \"boolean\",\n    \"tokenGeneratorMappings\": [\n      {\n        \"spTokenGeneratorRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"defaultMapping\": \"boolean\",\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"virtualEntityIds\": [\n    \"string\"\n  ],\n  \"metadataReloadSettings\": {\n    \"metadataUrlRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"enableAutoMetadataUpdate\": \"boolean\"\n  },\n  \"credentials\": {\n    \"verificationSubjectDN\": \"string\",\n    \"verificationIssuerDN\": \"string\",\n    \"certs\": [\n      {\n        \"certView\": {\n          \"id\": \"string\",\n          \"serialNumber\": \"string\",\n          \"subjectDN\": \"string\",\n          \"subjectAlternativeNames\": [\n            \"string\"\n          ],\n          \"issuerDN\": \"string\",\n          \"validFrom\": \"string\",\n          \"expires\": \"string\",\n          \"keyAlgorithm\": \"string\",\n          \"keySize\": \"integer\",\n          \"signatureAlgorithm\": \"string\",\n          \"version\": \"integer\",\n          \"sha1Fingerprint\": \"string\",\n          \"sha256Fingerprint\": \"string\",\n          \"status\": \"CertificateValidity\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"x509File\": {\n          \"id\": \"string\",\n          \"fileData\": \"string\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"activeVerificationCert\": \"boolean\",\n        \"primaryVerificationCert\": \"boolean\",\n        \"secondaryVerificationCert\": \"boolean\",\n        \"encryptionCert\": \"boolean\"\n      }\n    ],\n    \"blockEncryptionAlgorithm\": \"string\",\n    \"keyTransportAlgorithm\": \"string\",\n    \"signingSettings\": {\n      \"signingKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"algorithm\": \"string\",\n      \"includeCertInSignature\": \"boolean\",\n      \"includeRawKeyInSignature\": \"boolean\"\n    },\n    \"decryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"secondaryDecryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"outboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"sslAuthKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"validatePartnerCert\": \"boolean\"\n    },\n    \"inboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"verificationSubjectDN\": \"string\",\n      \"verificationIssuerDN\": \"string\",\n      \"certs\": [\n        {\n          \"certView\": {\n            \"id\": \"string\",\n            \"serialNumber\": \"string\",\n            \"subjectDN\": \"string\",\n            \"subjectAlternativeNames\": [\n              \"string\"\n            ],\n            \"issuerDN\": \"string\",\n            \"validFrom\": \"string\",\n            \"expires\": \"string\",\n            \"keyAlgorithm\": \"string\",\n            \"keySize\": \"integer\",\n            \"signatureAlgorithm\": \"string\",\n            \"version\": \"integer\",\n            \"sha1Fingerprint\": \"string\",\n            \"sha256Fingerprint\": \"string\",\n            \"status\": \"CertificateValidity\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"x509File\": {\n            \"id\": \"string\",\n            \"fileData\": \"string\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"activeVerificationCert\": \"boolean\",\n          \"primaryVerificationCert\": \"boolean\",\n          \"secondaryVerificationCert\": \"boolean\",\n          \"encryptionCert\": \"boolean\"\n        }\n      ],\n      \"requireSsl\": \"boolean\"\n    }\n  },\n  \"contactInfo\": {\n    \"company\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"phone\": \"string\"\n  },\n  \"licenseConnectionGroup\": \"string\",\n  \"loggingMode\": \"LoggingMode\",\n  \"additionalAllowedEntitiesConfiguration\": {\n    \"allowAdditionalEntities\": \"boolean\",\n    \"allowAllEntities\": \"boolean\",\n    \"additionalAllowedEntities\": [\n      {\n        \"entityId\": \"string\",\n        \"entityDescription\": \"string\"\n      }\n    ]\n  },\n  \"extendedProperties\": {\n    \"key\": {\n      \"values\": [\n        \"string\"\n      ]\n    }\n  },\n  \"errorPageMsgId\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections"
							]
						},
						"description": "Create a new IdP connection. If the IdP connection is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected."
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}"
							]
						},
						"description": "Get a SAML 2.0 IdP connection with the specified ID. A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"ConnectionType\",\n  \"id\": \"string\",\n  \"entityId\": \"string\",\n  \"name\": \"string\",\n  \"active\": \"boolean\",\n  \"baseUrl\": \"string\",\n  \"defaultVirtualEntityId\": \"string\",\n  \"oidcClientCredentials\": {\n    \"clientId\": \"string\",\n    \"clientSecret\": \"string\",\n    \"encryptedSecret\": \"string\"\n  },\n  \"idpBrowserSso\": {\n    \"protocol\": \"Protocol\",\n    \"oidcProviderSettings\": {\n      \"scopes\": \"string\",\n      \"authorizationEndpoint\": \"string\",\n      \"loginType\": \"OIDCLoginType\",\n      \"authenticationScheme\": \"OIDCAuthenticationScheme\",\n      \"authenticationSigningAlgorithm\": \"SigningAlgorithm\",\n      \"requestSigningAlgorithm\": \"SigningAlgorithm\",\n      \"tokenEndpoint\": \"string\",\n      \"userInfoEndpoint\": \"string\",\n      \"jwksURL\": \"string\",\n      \"requestParameters\": [\n        {\n          \"name\": \"string\",\n          \"value\": \"string\",\n          \"applicationEndpointOverride\": \"boolean\"\n        }\n      ]\n    },\n    \"enabledProfiles\": [\n      \"Profile\"\n    ],\n    \"incomingBindings\": [\n      \"Binding\"\n    ],\n    \"urlWhitelistEntries\": [\n      {\n        \"validDomain\": \"string\",\n        \"validPath\": \"string\",\n        \"allowQueryAndFragment\": \"boolean\",\n        \"requireHttps\": \"boolean\"\n      }\n    ],\n    \"artifact\": {\n      \"lifetime\": \"integer\",\n      \"resolverLocations\": [\n        {\n          \"index\": \"integer\",\n          \"url\": \"string\"\n        }\n      ],\n      \"sourceId\": \"string\"\n    },\n    \"sloServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\",\n        \"responseUrl\": \"string\"\n      }\n    ],\n    \"ssoServiceEndpoints\": [\n      {\n        \"binding\": \"Binding\",\n        \"url\": \"string\"\n      }\n    ],\n    \"defaultTargetUrl\": \"string\",\n    \"authnContextMappings\": [\n      {\n        \"local\": \"string\",\n        \"remote\": \"string\"\n      }\n    ],\n    \"assertionsSigned\": \"boolean\",\n    \"signAuthnRequests\": \"boolean\",\n    \"decryptionPolicy\": {\n      \"assertionEncrypted\": \"boolean\",\n      \"attributesEncrypted\": \"boolean\",\n      \"subjectNameIdEncrypted\": \"boolean\",\n      \"sloEncryptSubjectNameID\": \"boolean\",\n      \"sloSubjectNameIDEncrypted\": \"boolean\"\n    },\n    \"idpIdentityMapping\": \"IdpIdentityMapping\",\n    \"attributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ]\n    },\n    \"adapterMappings\": [\n      {\n        \"spAdapterRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualEntityIds\": \"boolean\",\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"adapterOverrideSettings\": {\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"pluginDescriptorRef\": {\n            \"id\": \"string\",\n            \"location\": \"string\"\n          },\n          \"parentRef\": {\n            \"id\": \"string\",\n            \"location\": \"string\"\n          },\n          \"configuration\": {\n            \"tables\": [\n              {\n                \"name\": \"string\",\n                \"rows\": [\n                  {\n                    \"fields\": [\n                      {\n                        \"name\": \"string\",\n                        \"value\": \"string\",\n                        \"encryptedValue\": \"string\",\n                        \"inherited\": \"boolean\"\n                      }\n                    ]\n                  }\n                ],\n                \"inherited\": \"boolean\"\n              }\n            ],\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          },\n          \"attributeContract\": {\n            \"coreAttributes\": [\n              {\n                \"name\": \"string\"\n              }\n            ],\n            \"extendedAttributes\": [\n              {\n                \"name\": \"string\"\n              }\n            ],\n            \"inherited\": \"boolean\"\n          },\n          \"targetApplicationInfo\": {\n            \"applicationName\": \"string\",\n            \"applicationIconUrl\": \"string\",\n            \"inherited\": \"boolean\"\n          }\n        },\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"authenticationPolicyContractMappings\": [\n      {\n        \"authenticationPolicyContractRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictVirtualServerIds\": \"boolean\",\n        \"restrictedVirtualServerIds\": [\n          \"string\"\n        ],\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"messageCustomizations\": [\n      {\n        \"contextName\": \"string\",\n        \"messageExpression\": \"string\"\n      }\n    ],\n    \"ssoOAuthMapping\": {\n      \"attributeSources\": [\n        {\n          \"type\": \"DataStoreType\",\n          \"dataStoreRef\": {\n            \"id\": \"string\",\n            \"location\": \"string\"\n          },\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"attributeContractFulfillment\": {\n            \"key\": {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"value\": \"string\"\n            }\n          }\n        }\n      ],\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      },\n      \"issuanceCriteria\": {\n        \"conditionalCriteria\": [\n          {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"attributeName\": \"string\",\n            \"condition\": \"ConditionType\",\n            \"value\": \"string\",\n            \"errorResult\": \"string\"\n          }\n        ],\n        \"expressionCriteria\": [\n          {\n            \"expression\": \"string\",\n            \"errorResult\": \"string\"\n          }\n        ]\n      }\n    },\n    \"oauthAuthenticationPolicyContractRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    }\n  },\n  \"attributeQuery\": {\n    \"url\": \"string\",\n    \"nameMappings\": [\n      {\n        \"localName\": \"string\",\n        \"remoteName\": \"string\"\n      }\n    ],\n    \"policy\": {\n      \"requireSignedResponse\": \"boolean\",\n      \"requireSignedAssertion\": \"boolean\",\n      \"requireEncryptedAssertion\": \"boolean\",\n      \"signAttributeQuery\": \"boolean\",\n      \"encryptNameId\": \"boolean\",\n      \"maskAttributeValues\": \"boolean\"\n    }\n  },\n  \"idpOAuthGrantAttributeMapping\": {\n    \"accessTokenManagerMappings\": [\n      {\n        \"accessTokenManagerRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"idpOAuthAttributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ]\n    }\n  },\n  \"wsTrust\": {\n    \"attributeContract\": {\n      \"coreAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"string\",\n          \"masked\": \"boolean\"\n        }\n      ]\n    },\n    \"generateLocalToken\": \"boolean\",\n    \"tokenGeneratorMappings\": [\n      {\n        \"spTokenGeneratorRef\": {\n          \"id\": \"string\",\n          \"location\": \"string\"\n        },\n        \"restrictedVirtualEntityIds\": [\n          \"string\"\n        ],\n        \"defaultMapping\": \"boolean\",\n        \"attributeSources\": [\n          {\n            \"type\": \"DataStoreType\",\n            \"dataStoreRef\": {\n              \"id\": \"string\",\n              \"location\": \"string\"\n            },\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"attributeContractFulfillment\": {\n              \"key\": {\n                \"source\": {\n                  \"type\": \"SourceType\",\n                  \"id\": \"string\"\n                },\n                \"value\": \"string\"\n              }\n            }\n          }\n        ],\n        \"attributeContractFulfillment\": {\n          \"key\": {\n            \"source\": {\n              \"type\": \"SourceType\",\n              \"id\": \"string\"\n            },\n            \"value\": \"string\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": [\n            {\n              \"source\": {\n                \"type\": \"SourceType\",\n                \"id\": \"string\"\n              },\n              \"attributeName\": \"string\",\n              \"condition\": \"ConditionType\",\n              \"value\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ],\n          \"expressionCriteria\": [\n            {\n              \"expression\": \"string\",\n              \"errorResult\": \"string\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"virtualEntityIds\": [\n    \"string\"\n  ],\n  \"metadataReloadSettings\": {\n    \"metadataUrlRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"enableAutoMetadataUpdate\": \"boolean\"\n  },\n  \"credentials\": {\n    \"verificationSubjectDN\": \"string\",\n    \"verificationIssuerDN\": \"string\",\n    \"certs\": [\n      {\n        \"certView\": {\n          \"id\": \"string\",\n          \"serialNumber\": \"string\",\n          \"subjectDN\": \"string\",\n          \"subjectAlternativeNames\": [\n            \"string\"\n          ],\n          \"issuerDN\": \"string\",\n          \"validFrom\": \"string\",\n          \"expires\": \"string\",\n          \"keyAlgorithm\": \"string\",\n          \"keySize\": \"integer\",\n          \"signatureAlgorithm\": \"string\",\n          \"version\": \"integer\",\n          \"sha1Fingerprint\": \"string\",\n          \"sha256Fingerprint\": \"string\",\n          \"status\": \"CertificateValidity\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"x509File\": {\n          \"id\": \"string\",\n          \"fileData\": \"string\",\n          \"cryptoProvider\": \"CryptoProvider\"\n        },\n        \"activeVerificationCert\": \"boolean\",\n        \"primaryVerificationCert\": \"boolean\",\n        \"secondaryVerificationCert\": \"boolean\",\n        \"encryptionCert\": \"boolean\"\n      }\n    ],\n    \"blockEncryptionAlgorithm\": \"string\",\n    \"keyTransportAlgorithm\": \"string\",\n    \"signingSettings\": {\n      \"signingKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"algorithm\": \"string\",\n      \"includeCertInSignature\": \"boolean\",\n      \"includeRawKeyInSignature\": \"boolean\"\n    },\n    \"decryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"secondaryDecryptionKeyPairRef\": {\n      \"id\": \"string\",\n      \"location\": \"string\"\n    },\n    \"outboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"sslAuthKeyPairRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"validatePartnerCert\": \"boolean\"\n    },\n    \"inboundBackChannelAuth\": {\n      \"type\": \"BackChannelAuthType\",\n      \"httpBasicCredentials\": {\n        \"username\": \"string\",\n        \"password\": \"string\",\n        \"encryptedPassword\": \"string\"\n      },\n      \"digitalSignature\": \"boolean\",\n      \"verificationSubjectDN\": \"string\",\n      \"verificationIssuerDN\": \"string\",\n      \"certs\": [\n        {\n          \"certView\": {\n            \"id\": \"string\",\n            \"serialNumber\": \"string\",\n            \"subjectDN\": \"string\",\n            \"subjectAlternativeNames\": [\n              \"string\"\n            ],\n            \"issuerDN\": \"string\",\n            \"validFrom\": \"string\",\n            \"expires\": \"string\",\n            \"keyAlgorithm\": \"string\",\n            \"keySize\": \"integer\",\n            \"signatureAlgorithm\": \"string\",\n            \"version\": \"integer\",\n            \"sha1Fingerprint\": \"string\",\n            \"sha256Fingerprint\": \"string\",\n            \"status\": \"CertificateValidity\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"x509File\": {\n            \"id\": \"string\",\n            \"fileData\": \"string\",\n            \"cryptoProvider\": \"CryptoProvider\"\n          },\n          \"activeVerificationCert\": \"boolean\",\n          \"primaryVerificationCert\": \"boolean\",\n          \"secondaryVerificationCert\": \"boolean\",\n          \"encryptionCert\": \"boolean\"\n        }\n      ],\n      \"requireSsl\": \"boolean\"\n    }\n  },\n  \"contactInfo\": {\n    \"company\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"phone\": \"string\"\n  },\n  \"licenseConnectionGroup\": \"string\",\n  \"loggingMode\": \"LoggingMode\",\n  \"additionalAllowedEntitiesConfiguration\": {\n    \"allowAdditionalEntities\": \"boolean\",\n    \"allowAllEntities\": \"boolean\",\n    \"additionalAllowedEntities\": [\n      {\n        \"entityId\": \"string\",\n        \"entityDescription\": \"string\"\n      }\n    ]\n  },\n  \"extendedProperties\": {\n    \"key\": {\n      \"values\": [\n        \"string\"\n      ]\n    }\n  },\n  \"errorPageMsgId\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}"
							]
						},
						"description": "Update an IdP connection with the matching ID. If the IdP connection is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected. Note: A 404 status code is returned for nonexistent IDs."
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}"
							]
						},
						"description": "Delete an IdP connection with the specified ID. A 404 status code is returned for nonexistent IDs. Note: Only inactive connections can be deleted. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error."
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/signingSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/signingSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"signingSettings"
							]
						},
						"description": "Get the IdP connection's signature settings"
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/signingSettings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signingKeyPairRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"algorithm\": \"string\",\n  \"includeCertInSignature\": \"boolean\",\n  \"includeRawKeyInSignature\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/signingSettings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"signingSettings"
							]
						},
						"description": "Update the IdP connection's signature settings"
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/certs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"certView\": {\n    \"id\": \"string\",\n    \"serialNumber\": \"string\",\n    \"subjectDN\": \"string\",\n    \"subjectAlternativeNames\": [\n      \"string\"\n    ],\n    \"issuerDN\": \"string\",\n    \"validFrom\": \"string\",\n    \"expires\": \"string\",\n    \"keyAlgorithm\": \"string\",\n    \"keySize\": \"integer\",\n    \"signatureAlgorithm\": \"string\",\n    \"version\": \"integer\",\n    \"sha1Fingerprint\": \"string\",\n    \"sha256Fingerprint\": \"string\",\n    \"status\": \"CertificateValidity\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  },\n  \"x509File\": {\n    \"id\": \"string\",\n    \"fileData\": \"string\",\n    \"cryptoProvider\": \"CryptoProvider\"\n  },\n  \"activeVerificationCert\": \"boolean\",\n  \"primaryVerificationCert\": \"boolean\",\n  \"secondaryVerificationCert\": \"boolean\",\n  \"encryptionCert\": \"boolean\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/certs",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"certs"
							]
						},
						"description": "Create a new IdP connection verification certificate"
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/certs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/certs",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"certs"
							]
						},
						"description": "Get the IdP connection's certificates"
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/certs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"certView\": {\n        \"id\": \"string\",\n        \"serialNumber\": \"string\",\n        \"subjectDN\": \"string\",\n        \"subjectAlternativeNames\": [\n          \"string\"\n        ],\n        \"issuerDN\": \"string\",\n        \"validFrom\": \"string\",\n        \"expires\": \"string\",\n        \"keyAlgorithm\": \"string\",\n        \"keySize\": \"integer\",\n        \"signatureAlgorithm\": \"string\",\n        \"version\": \"integer\",\n        \"sha1Fingerprint\": \"string\",\n        \"sha256Fingerprint\": \"string\",\n        \"status\": \"CertificateValidity\",\n        \"cryptoProvider\": \"CryptoProvider\"\n      },\n      \"x509File\": {\n        \"id\": \"string\",\n        \"fileData\": \"string\",\n        \"cryptoProvider\": \"CryptoProvider\"\n      },\n      \"activeVerificationCert\": \"boolean\",\n      \"primaryVerificationCert\": \"boolean\",\n      \"secondaryVerificationCert\": \"boolean\",\n      \"encryptionCert\": \"boolean\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/certs",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"certs"
							]
						},
						"description": "Update the IdP connection's certificates"
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/decryptionKeys",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/decryptionKeys",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"decryptionKeys"
							]
						},
						"description": "Get the IdP connection's decryption keys"
					},
					"response": []
				},
				{
					"name": "/sp/idpConnections/{id}/credentials/decryptionKeys",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"primaryKeyRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"secondaryKeyPairRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/idpConnections/{id}/credentials/decryptionKeys",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"idpConnections",
								"{id}",
								"credentials",
								"decryptionKeys"
							]
						},
						"description": "Update the IdP connection's decryption keys"
					},
					"response": []
				}
			]
		},
		{
			"name": "/sp/targetUrlMappings",
			"item": [
				{
					"name": "/sp/targetUrlMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/targetUrlMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"targetUrlMappings"
							]
						},
						"description": "List the mappings between URLs and adapter or connection instances."
					},
					"response": []
				},
				{
					"name": "/sp/targetUrlMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"url\": \"string\",\n      \"type\": \"TargetUrlSource\",\n      \"ref\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/targetUrlMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"targetUrlMappings"
							]
						},
						"description": "Update the mappings between URLs and adapters or connections instances."
					},
					"response": []
				}
			]
		},
		{
			"name": "/sp/tokenGenerators",
			"item": [
				{
					"name": "/sp/tokenGenerators/descriptors",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators/descriptors",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators",
								"descriptors"
							]
						},
						"description": "Get the description for all token generator plugins"
					},
					"response": []
				},
				{
					"name": "/sp/tokenGenerators/descriptors/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators/descriptors/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators",
								"descriptors",
								"{id}"
							]
						},
						"description": "Get the description for a token generator plugin"
					},
					"response": []
				},
				{
					"name": "/sp/tokenGenerators",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators"
							]
						},
						"description": "Get all token generators"
					},
					"response": []
				},
				{
					"name": "/sp/tokenGenerators",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  },\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators"
							]
						},
						"description": "Create a token generator"
					},
					"response": []
				},
				{
					"name": "/sp/tokenGenerators/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators",
								"{id}"
							]
						},
						"description": "Get a token generator"
					},
					"response": []
				},
				{
					"name": "/sp/tokenGenerators/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"string\"\n      }\n    ],\n    \"inherited\": \"boolean\"\n  },\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"parentRef\": {\n    \"id\": \"string\",\n    \"location\": \"string\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"string\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"string\",\n                \"value\": \"string\",\n                \"encryptedValue\": \"string\",\n                \"inherited\": \"boolean\"\n              }\n            ]\n          }\n        ],\n        \"inherited\": \"boolean\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"string\",\n        \"value\": \"string\",\n        \"encryptedValue\": \"string\",\n        \"inherited\": \"boolean\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators",
								"{id}"
							]
						},
						"description": "Update a token generator"
					},
					"response": []
				},
				{
					"name": "/sp/tokenGenerators/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/sp/tokenGenerators/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"sp",
								"tokenGenerators",
								"{id}"
							]
						},
						"description": "Delete a token generator"
					},
					"response": []
				}
			]
		},
		{
			"name": "/tokenProcessorToTokenGeneratorMappings",
			"item": [
				{
					"name": "/tokenProcessorToTokenGeneratorMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/tokenProcessorToTokenGeneratorMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"tokenProcessorToTokenGeneratorMappings"
							]
						},
						"description": "Get all the Token Processor to Token Generator Mappings"
					},
					"response": []
				},
				{
					"name": "/tokenProcessorToTokenGeneratorMappings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"sourceId\": \"string\",\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  },\n  \"targetId\": \"string\",\n  \"defaultTargetResource\": \"string\",\n  \"licenseConnectionGroupAssignment\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/tokenProcessorToTokenGeneratorMappings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"tokenProcessorToTokenGeneratorMappings"
							]
						},
						"description": "Create a Token Processor to Token Generator Mapping"
					},
					"response": []
				},
				{
					"name": "/tokenProcessorToTokenGeneratorMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/tokenProcessorToTokenGeneratorMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"tokenProcessorToTokenGeneratorMappings",
								"{id}"
							]
						},
						"description": "Get a Token Processor to Token Generator Mapping"
					},
					"response": []
				},
				{
					"name": "/tokenProcessorToTokenGeneratorMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"attributeSources\": [\n    {\n      \"type\": \"DataStoreType\",\n      \"dataStoreRef\": {\n        \"id\": \"string\",\n        \"location\": \"string\"\n      },\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"attributeContractFulfillment\": {\n        \"key\": {\n          \"source\": {\n            \"type\": \"SourceType\",\n            \"id\": \"string\"\n          },\n          \"value\": \"string\"\n        }\n      }\n    }\n  ],\n  \"attributeContractFulfillment\": {\n    \"key\": {\n      \"source\": {\n        \"type\": \"SourceType\",\n        \"id\": \"string\"\n      },\n      \"value\": \"string\"\n    }\n  },\n  \"sourceId\": \"string\",\n  \"issuanceCriteria\": {\n    \"conditionalCriteria\": [\n      {\n        \"source\": {\n          \"type\": \"SourceType\",\n          \"id\": \"string\"\n        },\n        \"attributeName\": \"string\",\n        \"condition\": \"ConditionType\",\n        \"value\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ],\n    \"expressionCriteria\": [\n      {\n        \"expression\": \"string\",\n        \"errorResult\": \"string\"\n      }\n    ]\n  },\n  \"targetId\": \"string\",\n  \"defaultTargetResource\": \"string\",\n  \"licenseConnectionGroupAssignment\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/tokenProcessorToTokenGeneratorMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"tokenProcessorToTokenGeneratorMappings",
								"{id}"
							]
						},
						"description": "Update a Token Processor to Token Generator Mapping"
					},
					"response": []
				},
				{
					"name": "/tokenProcessorToTokenGeneratorMappings/{id}",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/tokenProcessorToTokenGeneratorMappings/{id}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"tokenProcessorToTokenGeneratorMappings",
								"{id}"
							]
						},
						"description": "Delete a Token Processor to Token Generator Mapping"
					},
					"response": []
				}
			]
		},
		{
			"name": "/version",
			"item": [
				{
					"name": "/version",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/version",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"version"
							]
						},
						"description": "Gets the server version."
					},
					"response": []
				}
			]
		},
		{
			"name": "/virtualHostNames",
			"item": [
				{
					"name": "/virtualHostNames",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							}
						],
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/virtualHostNames",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"virtualHostNames"
							]
						},
						"description": "Get virtual host name settings"
					},
					"response": []
				},
				{
					"name": "/virtualHostNames",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{un}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{pw}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Xsrf-Header",
								"value": "PingFederate"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"virtualHostNames\": [\n    \"string\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{host}}:9999/pf-admin-api/v1/virtualHostNames",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "9999",
							"path": [
								"pf-admin-api",
								"v1",
								"virtualHostNames"
							]
						},
						"description": "Update virtual host name settings"
					},
					"response": []
				}
			]
		}
	]
}